
TASK1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e64  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006e4  00000000  00000000  00000eb8  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  0000159c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00001621  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000000ab  00000000  00000000  00001641  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000001b8  00000000  00000000  000016ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000008c  00000000  00000000  000018a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009fc  00000000  00000000  00001930  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000090  00000000  00000000  0000232c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000193  00000000  00000000  000023bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 0000001e  00000000  00000000  0000254f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 8a 00 	jmp	0x114	; 0x114 <__ctors_end>
   4:	0c 94 95 06 	jmp	0xd2a	; 0xd2a <__vector_1>
   8:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
   c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  10:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  14:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  18:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  1c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  20:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  24:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__vector_9>
  28:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  2c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  30:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  34:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  38:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  3c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  40:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  44:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  48:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  4c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  50:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  54:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  58:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  5c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  60:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  64:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  68:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  6c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  70:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  74:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  78:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  7c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  80:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  84:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  88:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  8c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  90:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  94:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  98:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  9c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  a0:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  a4:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  a8:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  ac:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  b0:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  b4:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  b8:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  bc:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  c0:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  c4:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  c8:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  cc:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  d0:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  d4:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  d8:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  dc:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  e0:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
  e4:	71 05       	cpc	r23, r1
  e6:	7b 05       	cpc	r23, r11
  e8:	85 05       	cpc	r24, r5
  ea:	8f 05       	cpc	r24, r15
  ec:	99 05       	cpc	r25, r9
  ee:	a3 05       	cpc	r26, r3
  f0:	ad 05       	cpc	r26, r13
  f2:	b7 05       	cpc	r27, r7
  f4:	c1 05       	cpc	r28, r1
  f6:	cb 05       	cpc	r28, r11
  f8:	d5 05       	cpc	r29, r5
  fa:	df 05       	cpc	r29, r15
  fc:	e9 05       	cpc	r30, r9
  fe:	f3 05       	cpc	r31, r3
 100:	fd 05       	cpc	r31, r13
 102:	07 06       	cpc	r0, r23
 104:	11 06       	cpc	r1, r17
 106:	1b 06       	cpc	r1, r27
 108:	25 06       	cpc	r2, r21
 10a:	2f 06       	cpc	r2, r31
 10c:	39 06       	cpc	r3, r25
 10e:	43 06       	cpc	r4, r19
 110:	4d 06       	cpc	r4, r29
 112:	57 06       	cpc	r5, r23

00000114 <__ctors_end>:
 114:	11 24       	eor	r1, r1
 116:	1f be       	out	0x3f, r1	; 63
 118:	cf ef       	ldi	r28, 0xFF	; 255
 11a:	d1 e2       	ldi	r29, 0x21	; 33
 11c:	de bf       	out	0x3e, r29	; 62
 11e:	cd bf       	out	0x3d, r28	; 61
 120:	00 e0       	ldi	r16, 0x00	; 0
 122:	0c bf       	out	0x3c, r16	; 60

00000124 <__do_copy_data>:
 124:	12 e0       	ldi	r17, 0x02	; 2
 126:	a0 e0       	ldi	r26, 0x00	; 0
 128:	b2 e0       	ldi	r27, 0x02	; 2
 12a:	e4 e6       	ldi	r30, 0x64	; 100
 12c:	fe e0       	ldi	r31, 0x0E	; 14
 12e:	02 c0       	rjmp	.+4      	; 0x134 <.do_copy_data_start>

00000130 <.do_copy_data_loop>:
 130:	05 90       	lpm	r0, Z+
 132:	0d 92       	st	X+, r0

00000134 <.do_copy_data_start>:
 134:	a0 30       	cpi	r26, 0x00	; 0
 136:	b1 07       	cpc	r27, r17
 138:	d9 f7       	brne	.-10     	; 0x130 <.do_copy_data_loop>
 13a:	0e 94 0d 07 	call	0xe1a	; 0xe1a <main>
 13e:	0c 94 31 07 	jmp	0xe62	; 0xe62 <_exit>

00000142 <__bad_interrupt>:
 142:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000146 <Configure_Interrupt>:
 *         rise an interrupt request.
 *  \param INT_NO	The interrupt for which configuration has to be setup.
 *  \param INT_MODE	The sensing mode of the INT_NO.
 */
void Configure_Interrupt(uint8_t INT_NO, uint8_t INT_MODE)
{
 146:	df 93       	push	r29
 148:	cf 93       	push	r28
 14a:	0f 92       	push	r0
 14c:	0f 92       	push	r0
 14e:	cd b7       	in	r28, 0x3d	; 61
 150:	de b7       	in	r29, 0x3e	; 62
 152:	89 83       	std	Y+1, r24	; 0x01
 154:	6a 83       	std	Y+2, r22	; 0x02
	switch(INT_NO){
 156:	89 81       	ldd	r24, Y+1	; 0x01
 158:	88 2f       	mov	r24, r24
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	83 30       	cpi	r24, 0x03	; 3
 15e:	91 05       	cpc	r25, r1
 160:	09 f4       	brne	.+2      	; 0x164 <Configure_Interrupt+0x1e>
 162:	dc c0       	rjmp	.+440    	; 0x31c <Configure_Interrupt+0x1d6>
 164:	84 30       	cpi	r24, 0x04	; 4
 166:	91 05       	cpc	r25, r1
 168:	5c f4       	brge	.+22     	; 0x180 <Configure_Interrupt+0x3a>
 16a:	81 30       	cpi	r24, 0x01	; 1
 16c:	91 05       	cpc	r25, r1
 16e:	09 f4       	brne	.+2      	; 0x172 <Configure_Interrupt+0x2c>
 170:	57 c0       	rjmp	.+174    	; 0x220 <Configure_Interrupt+0xda>
 172:	82 30       	cpi	r24, 0x02	; 2
 174:	91 05       	cpc	r25, r1
 176:	0c f0       	brlt	.+2      	; 0x17a <Configure_Interrupt+0x34>
 178:	92 c0       	rjmp	.+292    	; 0x29e <Configure_Interrupt+0x158>
 17a:	00 97       	sbiw	r24, 0x00	; 0
 17c:	91 f0       	breq	.+36     	; 0x1a2 <Configure_Interrupt+0x5c>
		case 3:EICRB=(EICRB&(~(1<<ISC71|1<<ISC70)))|(1<<ISC71|1<<ISC70);
			break;
		default:break;
		}
		break;
	default:break;
 17e:	08 c2       	rjmp	.+1040   	; 0x590 <Configure_Interrupt+0x44a>
 *  \param INT_NO	The interrupt for which configuration has to be setup.
 *  \param INT_MODE	The sensing mode of the INT_NO.
 */
void Configure_Interrupt(uint8_t INT_NO, uint8_t INT_MODE)
{
	switch(INT_NO){
 180:	85 30       	cpi	r24, 0x05	; 5
 182:	91 05       	cpc	r25, r1
 184:	09 f4       	brne	.+2      	; 0x188 <Configure_Interrupt+0x42>
 186:	48 c1       	rjmp	.+656    	; 0x418 <Configure_Interrupt+0x2d2>
 188:	85 30       	cpi	r24, 0x05	; 5
 18a:	91 05       	cpc	r25, r1
 18c:	0c f4       	brge	.+2      	; 0x190 <Configure_Interrupt+0x4a>
 18e:	05 c1       	rjmp	.+522    	; 0x39a <Configure_Interrupt+0x254>
 190:	86 30       	cpi	r24, 0x06	; 6
 192:	91 05       	cpc	r25, r1
 194:	09 f4       	brne	.+2      	; 0x198 <Configure_Interrupt+0x52>
 196:	7f c1       	rjmp	.+766    	; 0x496 <Configure_Interrupt+0x350>
 198:	87 30       	cpi	r24, 0x07	; 7
 19a:	91 05       	cpc	r25, r1
 19c:	09 f4       	brne	.+2      	; 0x1a0 <Configure_Interrupt+0x5a>
 19e:	ba c1       	rjmp	.+884    	; 0x514 <Configure_Interrupt+0x3ce>
		case 3:EICRB=(EICRB&(~(1<<ISC71|1<<ISC70)))|(1<<ISC71|1<<ISC70);
			break;
		default:break;
		}
		break;
	default:break;
 1a0:	f7 c1       	rjmp	.+1006   	; 0x590 <Configure_Interrupt+0x44a>
 *  \param INT_MODE	The sensing mode of the INT_NO.
 */
void Configure_Interrupt(uint8_t INT_NO, uint8_t INT_MODE)
{
	switch(INT_NO){
	case 0: switch(INT_MODE){
 1a2:	8a 81       	ldd	r24, Y+2	; 0x02
 1a4:	88 2f       	mov	r24, r24
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	81 30       	cpi	r24, 0x01	; 1
 1aa:	91 05       	cpc	r25, r1
 1ac:	b9 f0       	breq	.+46     	; 0x1dc <Configure_Interrupt+0x96>
 1ae:	82 30       	cpi	r24, 0x02	; 2
 1b0:	91 05       	cpc	r25, r1
 1b2:	1c f4       	brge	.+6      	; 0x1ba <Configure_Interrupt+0x74>
 1b4:	00 97       	sbiw	r24, 0x00	; 0
 1b6:	41 f0       	breq	.+16     	; 0x1c8 <Configure_Interrupt+0x82>
 1b8:	31 c0       	rjmp	.+98     	; 0x21c <Configure_Interrupt+0xd6>
 1ba:	82 30       	cpi	r24, 0x02	; 2
 1bc:	91 05       	cpc	r25, r1
 1be:	c9 f0       	breq	.+50     	; 0x1f2 <Configure_Interrupt+0xac>
 1c0:	83 30       	cpi	r24, 0x03	; 3
 1c2:	91 05       	cpc	r25, r1
 1c4:	09 f1       	breq	.+66     	; 0x208 <Configure_Interrupt+0xc2>
 1c6:	2a c0       	rjmp	.+84     	; 0x21c <Configure_Interrupt+0xd6>
		case 0:EICRA=(EICRA&(~(1<<ISC01|1<<ISC00)))|(0<<ISC01|0<<ISC00);
 1c8:	89 e6       	ldi	r24, 0x69	; 105
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	29 e6       	ldi	r18, 0x69	; 105
 1ce:	30 e0       	ldi	r19, 0x00	; 0
 1d0:	f9 01       	movw	r30, r18
 1d2:	20 81       	ld	r18, Z
 1d4:	2c 7f       	andi	r18, 0xFC	; 252
 1d6:	fc 01       	movw	r30, r24
 1d8:	20 83       	st	Z, r18
			break;
 1da:	21 c0       	rjmp	.+66     	; 0x21e <Configure_Interrupt+0xd8>
		case 1:EICRA=(EICRA&(~(1<<ISC01|1<<ISC00)))|(0<<ISC01|1<<ISC00);
 1dc:	89 e6       	ldi	r24, 0x69	; 105
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	29 e6       	ldi	r18, 0x69	; 105
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	f9 01       	movw	r30, r18
 1e6:	20 81       	ld	r18, Z
 1e8:	2c 7f       	andi	r18, 0xFC	; 252
 1ea:	21 60       	ori	r18, 0x01	; 1
 1ec:	fc 01       	movw	r30, r24
 1ee:	20 83       	st	Z, r18
			break;
 1f0:	16 c0       	rjmp	.+44     	; 0x21e <Configure_Interrupt+0xd8>
		case 2:EICRA=(EICRA&(~(1<<ISC01|1<<ISC00)))|(1<<ISC01|0<<ISC00);
 1f2:	89 e6       	ldi	r24, 0x69	; 105
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	29 e6       	ldi	r18, 0x69	; 105
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	f9 01       	movw	r30, r18
 1fc:	20 81       	ld	r18, Z
 1fe:	2c 7f       	andi	r18, 0xFC	; 252
 200:	22 60       	ori	r18, 0x02	; 2
 202:	fc 01       	movw	r30, r24
 204:	20 83       	st	Z, r18
			break;
 206:	0b c0       	rjmp	.+22     	; 0x21e <Configure_Interrupt+0xd8>
		case 3:EICRA=(EICRA&(~(1<<ISC01|1<<ISC00)))|(1<<ISC01|1<<ISC00);
 208:	89 e6       	ldi	r24, 0x69	; 105
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	29 e6       	ldi	r18, 0x69	; 105
 20e:	30 e0       	ldi	r19, 0x00	; 0
 210:	f9 01       	movw	r30, r18
 212:	20 81       	ld	r18, Z
 214:	23 60       	ori	r18, 0x03	; 3
 216:	fc 01       	movw	r30, r24
 218:	20 83       	st	Z, r18
			break;
 21a:	01 c0       	rjmp	.+2      	; 0x21e <Configure_Interrupt+0xd8>
		default:break;
 21c:	00 00       	nop
		}
		break;
 21e:	b8 c1       	rjmp	.+880    	; 0x590 <Configure_Interrupt+0x44a>
	case 1: switch(INT_MODE){
 220:	8a 81       	ldd	r24, Y+2	; 0x02
 222:	88 2f       	mov	r24, r24
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	81 30       	cpi	r24, 0x01	; 1
 228:	91 05       	cpc	r25, r1
 22a:	b9 f0       	breq	.+46     	; 0x25a <Configure_Interrupt+0x114>
 22c:	82 30       	cpi	r24, 0x02	; 2
 22e:	91 05       	cpc	r25, r1
 230:	1c f4       	brge	.+6      	; 0x238 <Configure_Interrupt+0xf2>
 232:	00 97       	sbiw	r24, 0x00	; 0
 234:	41 f0       	breq	.+16     	; 0x246 <Configure_Interrupt+0x100>
 236:	31 c0       	rjmp	.+98     	; 0x29a <Configure_Interrupt+0x154>
 238:	82 30       	cpi	r24, 0x02	; 2
 23a:	91 05       	cpc	r25, r1
 23c:	c9 f0       	breq	.+50     	; 0x270 <Configure_Interrupt+0x12a>
 23e:	83 30       	cpi	r24, 0x03	; 3
 240:	91 05       	cpc	r25, r1
 242:	09 f1       	breq	.+66     	; 0x286 <Configure_Interrupt+0x140>
 244:	2a c0       	rjmp	.+84     	; 0x29a <Configure_Interrupt+0x154>
		case 0:EICRA=(EICRA&(~(1<<ISC11|1<<ISC10)))|(0<<ISC11|0<<ISC10);
 246:	89 e6       	ldi	r24, 0x69	; 105
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	29 e6       	ldi	r18, 0x69	; 105
 24c:	30 e0       	ldi	r19, 0x00	; 0
 24e:	f9 01       	movw	r30, r18
 250:	20 81       	ld	r18, Z
 252:	23 7f       	andi	r18, 0xF3	; 243
 254:	fc 01       	movw	r30, r24
 256:	20 83       	st	Z, r18
			break;
 258:	21 c0       	rjmp	.+66     	; 0x29c <Configure_Interrupt+0x156>
		case 1:EICRA=(EICRA&(~(1<<ISC11|1<<ISC10)))|(0<<ISC11|1<<ISC10);
 25a:	89 e6       	ldi	r24, 0x69	; 105
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	29 e6       	ldi	r18, 0x69	; 105
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	f9 01       	movw	r30, r18
 264:	20 81       	ld	r18, Z
 266:	23 7f       	andi	r18, 0xF3	; 243
 268:	24 60       	ori	r18, 0x04	; 4
 26a:	fc 01       	movw	r30, r24
 26c:	20 83       	st	Z, r18
			break;
 26e:	16 c0       	rjmp	.+44     	; 0x29c <Configure_Interrupt+0x156>
		case 2:EICRA=(EICRA&(~(1<<ISC11|1<<ISC10)))|(1<<ISC11|0<<ISC10);
 270:	89 e6       	ldi	r24, 0x69	; 105
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	29 e6       	ldi	r18, 0x69	; 105
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	f9 01       	movw	r30, r18
 27a:	20 81       	ld	r18, Z
 27c:	23 7f       	andi	r18, 0xF3	; 243
 27e:	28 60       	ori	r18, 0x08	; 8
 280:	fc 01       	movw	r30, r24
 282:	20 83       	st	Z, r18
			break;
 284:	0b c0       	rjmp	.+22     	; 0x29c <Configure_Interrupt+0x156>
		case 3:EICRA=(EICRA&(~(1<<ISC11|1<<ISC10)))|(1<<ISC11|1<<ISC10);
 286:	89 e6       	ldi	r24, 0x69	; 105
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	29 e6       	ldi	r18, 0x69	; 105
 28c:	30 e0       	ldi	r19, 0x00	; 0
 28e:	f9 01       	movw	r30, r18
 290:	20 81       	ld	r18, Z
 292:	2c 60       	ori	r18, 0x0C	; 12
 294:	fc 01       	movw	r30, r24
 296:	20 83       	st	Z, r18
			break;
 298:	01 c0       	rjmp	.+2      	; 0x29c <Configure_Interrupt+0x156>
		default:break;
 29a:	00 00       	nop
		}
		break;
 29c:	79 c1       	rjmp	.+754    	; 0x590 <Configure_Interrupt+0x44a>
	case 2: switch(INT_MODE){
 29e:	8a 81       	ldd	r24, Y+2	; 0x02
 2a0:	88 2f       	mov	r24, r24
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	81 30       	cpi	r24, 0x01	; 1
 2a6:	91 05       	cpc	r25, r1
 2a8:	b9 f0       	breq	.+46     	; 0x2d8 <Configure_Interrupt+0x192>
 2aa:	82 30       	cpi	r24, 0x02	; 2
 2ac:	91 05       	cpc	r25, r1
 2ae:	1c f4       	brge	.+6      	; 0x2b6 <Configure_Interrupt+0x170>
 2b0:	00 97       	sbiw	r24, 0x00	; 0
 2b2:	41 f0       	breq	.+16     	; 0x2c4 <Configure_Interrupt+0x17e>
 2b4:	31 c0       	rjmp	.+98     	; 0x318 <Configure_Interrupt+0x1d2>
 2b6:	82 30       	cpi	r24, 0x02	; 2
 2b8:	91 05       	cpc	r25, r1
 2ba:	c9 f0       	breq	.+50     	; 0x2ee <Configure_Interrupt+0x1a8>
 2bc:	83 30       	cpi	r24, 0x03	; 3
 2be:	91 05       	cpc	r25, r1
 2c0:	09 f1       	breq	.+66     	; 0x304 <Configure_Interrupt+0x1be>
 2c2:	2a c0       	rjmp	.+84     	; 0x318 <Configure_Interrupt+0x1d2>
		case 0:EICRA=(EICRA&(~(1<<ISC21|1<<ISC20)))|(0<<ISC21|0<<ISC20);
 2c4:	89 e6       	ldi	r24, 0x69	; 105
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	29 e6       	ldi	r18, 0x69	; 105
 2ca:	30 e0       	ldi	r19, 0x00	; 0
 2cc:	f9 01       	movw	r30, r18
 2ce:	20 81       	ld	r18, Z
 2d0:	2f 7c       	andi	r18, 0xCF	; 207
 2d2:	fc 01       	movw	r30, r24
 2d4:	20 83       	st	Z, r18
			break;
 2d6:	21 c0       	rjmp	.+66     	; 0x31a <Configure_Interrupt+0x1d4>
		case 1:EICRA=(EICRA&(~(1<<ISC21|1<<ISC20)))|(0<<ISC21|1<<ISC20);
 2d8:	89 e6       	ldi	r24, 0x69	; 105
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	29 e6       	ldi	r18, 0x69	; 105
 2de:	30 e0       	ldi	r19, 0x00	; 0
 2e0:	f9 01       	movw	r30, r18
 2e2:	20 81       	ld	r18, Z
 2e4:	2f 7c       	andi	r18, 0xCF	; 207
 2e6:	20 61       	ori	r18, 0x10	; 16
 2e8:	fc 01       	movw	r30, r24
 2ea:	20 83       	st	Z, r18
			break;
 2ec:	16 c0       	rjmp	.+44     	; 0x31a <Configure_Interrupt+0x1d4>
		case 2:EICRA=(EICRA&(~(1<<ISC21|1<<ISC20)))|(1<<ISC21|0<<ISC20);
 2ee:	89 e6       	ldi	r24, 0x69	; 105
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	29 e6       	ldi	r18, 0x69	; 105
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	f9 01       	movw	r30, r18
 2f8:	20 81       	ld	r18, Z
 2fa:	2f 7c       	andi	r18, 0xCF	; 207
 2fc:	20 62       	ori	r18, 0x20	; 32
 2fe:	fc 01       	movw	r30, r24
 300:	20 83       	st	Z, r18
			break;
 302:	0b c0       	rjmp	.+22     	; 0x31a <Configure_Interrupt+0x1d4>
		case 3:EICRA=(EICRA&(~(1<<ISC21|1<<ISC20)))|(1<<ISC21|1<<ISC20);
 304:	89 e6       	ldi	r24, 0x69	; 105
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	29 e6       	ldi	r18, 0x69	; 105
 30a:	30 e0       	ldi	r19, 0x00	; 0
 30c:	f9 01       	movw	r30, r18
 30e:	20 81       	ld	r18, Z
 310:	20 63       	ori	r18, 0x30	; 48
 312:	fc 01       	movw	r30, r24
 314:	20 83       	st	Z, r18
			break;
 316:	01 c0       	rjmp	.+2      	; 0x31a <Configure_Interrupt+0x1d4>
		default:break;
 318:	00 00       	nop
		}
		break;
 31a:	3a c1       	rjmp	.+628    	; 0x590 <Configure_Interrupt+0x44a>
	case 3: switch(INT_MODE){
 31c:	8a 81       	ldd	r24, Y+2	; 0x02
 31e:	88 2f       	mov	r24, r24
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	81 30       	cpi	r24, 0x01	; 1
 324:	91 05       	cpc	r25, r1
 326:	b9 f0       	breq	.+46     	; 0x356 <Configure_Interrupt+0x210>
 328:	82 30       	cpi	r24, 0x02	; 2
 32a:	91 05       	cpc	r25, r1
 32c:	1c f4       	brge	.+6      	; 0x334 <Configure_Interrupt+0x1ee>
 32e:	00 97       	sbiw	r24, 0x00	; 0
 330:	41 f0       	breq	.+16     	; 0x342 <Configure_Interrupt+0x1fc>
 332:	31 c0       	rjmp	.+98     	; 0x396 <Configure_Interrupt+0x250>
 334:	82 30       	cpi	r24, 0x02	; 2
 336:	91 05       	cpc	r25, r1
 338:	c9 f0       	breq	.+50     	; 0x36c <Configure_Interrupt+0x226>
 33a:	83 30       	cpi	r24, 0x03	; 3
 33c:	91 05       	cpc	r25, r1
 33e:	09 f1       	breq	.+66     	; 0x382 <Configure_Interrupt+0x23c>
 340:	2a c0       	rjmp	.+84     	; 0x396 <Configure_Interrupt+0x250>
		case 0:EICRA=(EICRA&(~(1<<ISC31|1<<ISC30)))|(0<<ISC31|0<<ISC30);
 342:	89 e6       	ldi	r24, 0x69	; 105
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	29 e6       	ldi	r18, 0x69	; 105
 348:	30 e0       	ldi	r19, 0x00	; 0
 34a:	f9 01       	movw	r30, r18
 34c:	20 81       	ld	r18, Z
 34e:	2f 73       	andi	r18, 0x3F	; 63
 350:	fc 01       	movw	r30, r24
 352:	20 83       	st	Z, r18
			break;
 354:	21 c0       	rjmp	.+66     	; 0x398 <Configure_Interrupt+0x252>
		case 1:EICRA=(EICRA&(~(1<<ISC31|1<<ISC30)))|(0<<ISC31|1<<ISC30);
 356:	89 e6       	ldi	r24, 0x69	; 105
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	29 e6       	ldi	r18, 0x69	; 105
 35c:	30 e0       	ldi	r19, 0x00	; 0
 35e:	f9 01       	movw	r30, r18
 360:	20 81       	ld	r18, Z
 362:	2f 73       	andi	r18, 0x3F	; 63
 364:	20 64       	ori	r18, 0x40	; 64
 366:	fc 01       	movw	r30, r24
 368:	20 83       	st	Z, r18
			break;
 36a:	16 c0       	rjmp	.+44     	; 0x398 <Configure_Interrupt+0x252>
		case 2:EICRA=(EICRA&(~(1<<ISC31|1<<ISC30)))|(1<<ISC31|0<<ISC30);
 36c:	89 e6       	ldi	r24, 0x69	; 105
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	29 e6       	ldi	r18, 0x69	; 105
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	f9 01       	movw	r30, r18
 376:	20 81       	ld	r18, Z
 378:	2f 73       	andi	r18, 0x3F	; 63
 37a:	20 68       	ori	r18, 0x80	; 128
 37c:	fc 01       	movw	r30, r24
 37e:	20 83       	st	Z, r18
			break;
 380:	0b c0       	rjmp	.+22     	; 0x398 <Configure_Interrupt+0x252>
		case 3:EICRA=(EICRA&(~(1<<ISC31|1<<ISC30)))|(1<<ISC31|1<<ISC30);
 382:	89 e6       	ldi	r24, 0x69	; 105
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	29 e6       	ldi	r18, 0x69	; 105
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	f9 01       	movw	r30, r18
 38c:	20 81       	ld	r18, Z
 38e:	20 6c       	ori	r18, 0xC0	; 192
 390:	fc 01       	movw	r30, r24
 392:	20 83       	st	Z, r18
			break;
 394:	01 c0       	rjmp	.+2      	; 0x398 <Configure_Interrupt+0x252>
		default:break;
 396:	00 00       	nop
		}
		break;
 398:	fb c0       	rjmp	.+502    	; 0x590 <Configure_Interrupt+0x44a>
	case 4: switch(INT_MODE){
 39a:	8a 81       	ldd	r24, Y+2	; 0x02
 39c:	88 2f       	mov	r24, r24
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	81 30       	cpi	r24, 0x01	; 1
 3a2:	91 05       	cpc	r25, r1
 3a4:	b9 f0       	breq	.+46     	; 0x3d4 <Configure_Interrupt+0x28e>
 3a6:	82 30       	cpi	r24, 0x02	; 2
 3a8:	91 05       	cpc	r25, r1
 3aa:	1c f4       	brge	.+6      	; 0x3b2 <Configure_Interrupt+0x26c>
 3ac:	00 97       	sbiw	r24, 0x00	; 0
 3ae:	41 f0       	breq	.+16     	; 0x3c0 <Configure_Interrupt+0x27a>
 3b0:	31 c0       	rjmp	.+98     	; 0x414 <Configure_Interrupt+0x2ce>
 3b2:	82 30       	cpi	r24, 0x02	; 2
 3b4:	91 05       	cpc	r25, r1
 3b6:	c9 f0       	breq	.+50     	; 0x3ea <Configure_Interrupt+0x2a4>
 3b8:	83 30       	cpi	r24, 0x03	; 3
 3ba:	91 05       	cpc	r25, r1
 3bc:	09 f1       	breq	.+66     	; 0x400 <Configure_Interrupt+0x2ba>
 3be:	2a c0       	rjmp	.+84     	; 0x414 <Configure_Interrupt+0x2ce>
		case 0:EICRB=(EICRB&(~(1<<ISC41|1<<ISC40)))|(0<<ISC41|0<<ISC40);
 3c0:	8a e6       	ldi	r24, 0x6A	; 106
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	2a e6       	ldi	r18, 0x6A	; 106
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	f9 01       	movw	r30, r18
 3ca:	20 81       	ld	r18, Z
 3cc:	2c 7f       	andi	r18, 0xFC	; 252
 3ce:	fc 01       	movw	r30, r24
 3d0:	20 83       	st	Z, r18
			break;
 3d2:	21 c0       	rjmp	.+66     	; 0x416 <Configure_Interrupt+0x2d0>
		case 1:EICRB=(EICRB&(~(1<<ISC41|1<<ISC40)))|(0<<ISC41|1<<ISC40);
 3d4:	8a e6       	ldi	r24, 0x6A	; 106
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	2a e6       	ldi	r18, 0x6A	; 106
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	f9 01       	movw	r30, r18
 3de:	20 81       	ld	r18, Z
 3e0:	2c 7f       	andi	r18, 0xFC	; 252
 3e2:	21 60       	ori	r18, 0x01	; 1
 3e4:	fc 01       	movw	r30, r24
 3e6:	20 83       	st	Z, r18
			break;
 3e8:	16 c0       	rjmp	.+44     	; 0x416 <Configure_Interrupt+0x2d0>
		case 2:EICRB=(EICRB&(~(1<<ISC41|1<<ISC40)))|(1<<ISC41|0<<ISC40);
 3ea:	8a e6       	ldi	r24, 0x6A	; 106
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	2a e6       	ldi	r18, 0x6A	; 106
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	f9 01       	movw	r30, r18
 3f4:	20 81       	ld	r18, Z
 3f6:	2c 7f       	andi	r18, 0xFC	; 252
 3f8:	22 60       	ori	r18, 0x02	; 2
 3fa:	fc 01       	movw	r30, r24
 3fc:	20 83       	st	Z, r18
			break;
 3fe:	0b c0       	rjmp	.+22     	; 0x416 <Configure_Interrupt+0x2d0>
		case 3:EICRB=(EICRB&(~(1<<ISC41|1<<ISC40)))|(1<<ISC41|1<<ISC40);
 400:	8a e6       	ldi	r24, 0x6A	; 106
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	2a e6       	ldi	r18, 0x6A	; 106
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	f9 01       	movw	r30, r18
 40a:	20 81       	ld	r18, Z
 40c:	23 60       	ori	r18, 0x03	; 3
 40e:	fc 01       	movw	r30, r24
 410:	20 83       	st	Z, r18
			break;
 412:	01 c0       	rjmp	.+2      	; 0x416 <Configure_Interrupt+0x2d0>
		default:break;
 414:	00 00       	nop
		}
		break;
 416:	bc c0       	rjmp	.+376    	; 0x590 <Configure_Interrupt+0x44a>
	case 5: switch(INT_MODE){
 418:	8a 81       	ldd	r24, Y+2	; 0x02
 41a:	88 2f       	mov	r24, r24
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	81 30       	cpi	r24, 0x01	; 1
 420:	91 05       	cpc	r25, r1
 422:	b9 f0       	breq	.+46     	; 0x452 <Configure_Interrupt+0x30c>
 424:	82 30       	cpi	r24, 0x02	; 2
 426:	91 05       	cpc	r25, r1
 428:	1c f4       	brge	.+6      	; 0x430 <Configure_Interrupt+0x2ea>
 42a:	00 97       	sbiw	r24, 0x00	; 0
 42c:	41 f0       	breq	.+16     	; 0x43e <Configure_Interrupt+0x2f8>
 42e:	31 c0       	rjmp	.+98     	; 0x492 <Configure_Interrupt+0x34c>
 430:	82 30       	cpi	r24, 0x02	; 2
 432:	91 05       	cpc	r25, r1
 434:	c9 f0       	breq	.+50     	; 0x468 <Configure_Interrupt+0x322>
 436:	83 30       	cpi	r24, 0x03	; 3
 438:	91 05       	cpc	r25, r1
 43a:	09 f1       	breq	.+66     	; 0x47e <Configure_Interrupt+0x338>
 43c:	2a c0       	rjmp	.+84     	; 0x492 <Configure_Interrupt+0x34c>
		case 0:EICRB=(EICRB&(~(1<<ISC51|1<<ISC50)))|(0<<ISC51|0<<ISC50);
 43e:	8a e6       	ldi	r24, 0x6A	; 106
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	2a e6       	ldi	r18, 0x6A	; 106
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	f9 01       	movw	r30, r18
 448:	20 81       	ld	r18, Z
 44a:	23 7f       	andi	r18, 0xF3	; 243
 44c:	fc 01       	movw	r30, r24
 44e:	20 83       	st	Z, r18
			break;
 450:	21 c0       	rjmp	.+66     	; 0x494 <Configure_Interrupt+0x34e>
		case 1:EICRB=(EICRB&(~(1<<ISC51|1<<ISC50)))|(0<<ISC51|1<<ISC50);
 452:	8a e6       	ldi	r24, 0x6A	; 106
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	2a e6       	ldi	r18, 0x6A	; 106
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	f9 01       	movw	r30, r18
 45c:	20 81       	ld	r18, Z
 45e:	23 7f       	andi	r18, 0xF3	; 243
 460:	24 60       	ori	r18, 0x04	; 4
 462:	fc 01       	movw	r30, r24
 464:	20 83       	st	Z, r18
			break;
 466:	16 c0       	rjmp	.+44     	; 0x494 <Configure_Interrupt+0x34e>
		case 2:EICRB=(EICRB&(~(1<<ISC51|1<<ISC50)))|(1<<ISC51|0<<ISC50);
 468:	8a e6       	ldi	r24, 0x6A	; 106
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	2a e6       	ldi	r18, 0x6A	; 106
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	f9 01       	movw	r30, r18
 472:	20 81       	ld	r18, Z
 474:	23 7f       	andi	r18, 0xF3	; 243
 476:	28 60       	ori	r18, 0x08	; 8
 478:	fc 01       	movw	r30, r24
 47a:	20 83       	st	Z, r18
			break;
 47c:	0b c0       	rjmp	.+22     	; 0x494 <Configure_Interrupt+0x34e>
		case 3:EICRB=(EICRB&(~(1<<ISC51|1<<ISC50)))|(1<<ISC51|1<<ISC50);
 47e:	8a e6       	ldi	r24, 0x6A	; 106
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	2a e6       	ldi	r18, 0x6A	; 106
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	f9 01       	movw	r30, r18
 488:	20 81       	ld	r18, Z
 48a:	2c 60       	ori	r18, 0x0C	; 12
 48c:	fc 01       	movw	r30, r24
 48e:	20 83       	st	Z, r18
			break;
 490:	01 c0       	rjmp	.+2      	; 0x494 <Configure_Interrupt+0x34e>
		default:break;
 492:	00 00       	nop
		}
		break;
 494:	7d c0       	rjmp	.+250    	; 0x590 <Configure_Interrupt+0x44a>
	case 6: switch(INT_MODE){
 496:	8a 81       	ldd	r24, Y+2	; 0x02
 498:	88 2f       	mov	r24, r24
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	81 30       	cpi	r24, 0x01	; 1
 49e:	91 05       	cpc	r25, r1
 4a0:	b9 f0       	breq	.+46     	; 0x4d0 <Configure_Interrupt+0x38a>
 4a2:	82 30       	cpi	r24, 0x02	; 2
 4a4:	91 05       	cpc	r25, r1
 4a6:	1c f4       	brge	.+6      	; 0x4ae <Configure_Interrupt+0x368>
 4a8:	00 97       	sbiw	r24, 0x00	; 0
 4aa:	41 f0       	breq	.+16     	; 0x4bc <Configure_Interrupt+0x376>
 4ac:	31 c0       	rjmp	.+98     	; 0x510 <Configure_Interrupt+0x3ca>
 4ae:	82 30       	cpi	r24, 0x02	; 2
 4b0:	91 05       	cpc	r25, r1
 4b2:	c9 f0       	breq	.+50     	; 0x4e6 <Configure_Interrupt+0x3a0>
 4b4:	83 30       	cpi	r24, 0x03	; 3
 4b6:	91 05       	cpc	r25, r1
 4b8:	09 f1       	breq	.+66     	; 0x4fc <Configure_Interrupt+0x3b6>
 4ba:	2a c0       	rjmp	.+84     	; 0x510 <Configure_Interrupt+0x3ca>
		case 0:EICRB=(EICRB&(~(1<<ISC61|1<<ISC60)))|(0<<ISC61|0<<ISC60);
 4bc:	8a e6       	ldi	r24, 0x6A	; 106
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	2a e6       	ldi	r18, 0x6A	; 106
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	f9 01       	movw	r30, r18
 4c6:	20 81       	ld	r18, Z
 4c8:	2f 7c       	andi	r18, 0xCF	; 207
 4ca:	fc 01       	movw	r30, r24
 4cc:	20 83       	st	Z, r18
			break;
 4ce:	21 c0       	rjmp	.+66     	; 0x512 <Configure_Interrupt+0x3cc>
		case 1:EICRB=(EICRB&(~(1<<ISC61|1<<ISC60)))|(0<<ISC61|1<<ISC60);
 4d0:	8a e6       	ldi	r24, 0x6A	; 106
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	2a e6       	ldi	r18, 0x6A	; 106
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	f9 01       	movw	r30, r18
 4da:	20 81       	ld	r18, Z
 4dc:	2f 7c       	andi	r18, 0xCF	; 207
 4de:	20 61       	ori	r18, 0x10	; 16
 4e0:	fc 01       	movw	r30, r24
 4e2:	20 83       	st	Z, r18
			break;
 4e4:	16 c0       	rjmp	.+44     	; 0x512 <Configure_Interrupt+0x3cc>
		case 2:EICRB=(EICRB&(~(1<<ISC61|1<<ISC60)))|(1<<ISC61|0<<ISC60);
 4e6:	8a e6       	ldi	r24, 0x6A	; 106
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	2a e6       	ldi	r18, 0x6A	; 106
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	f9 01       	movw	r30, r18
 4f0:	20 81       	ld	r18, Z
 4f2:	2f 7c       	andi	r18, 0xCF	; 207
 4f4:	20 62       	ori	r18, 0x20	; 32
 4f6:	fc 01       	movw	r30, r24
 4f8:	20 83       	st	Z, r18
			break;
 4fa:	0b c0       	rjmp	.+22     	; 0x512 <Configure_Interrupt+0x3cc>
		case 3:EICRB=(EICRB&(~(1<<ISC61|1<<ISC60)))|(1<<ISC61|1<<ISC60);
 4fc:	8a e6       	ldi	r24, 0x6A	; 106
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	2a e6       	ldi	r18, 0x6A	; 106
 502:	30 e0       	ldi	r19, 0x00	; 0
 504:	f9 01       	movw	r30, r18
 506:	20 81       	ld	r18, Z
 508:	20 63       	ori	r18, 0x30	; 48
 50a:	fc 01       	movw	r30, r24
 50c:	20 83       	st	Z, r18
			break;
 50e:	01 c0       	rjmp	.+2      	; 0x512 <Configure_Interrupt+0x3cc>
		default:break;
 510:	00 00       	nop
		}
		break;
 512:	3e c0       	rjmp	.+124    	; 0x590 <Configure_Interrupt+0x44a>
	case 7: switch(INT_MODE){
 514:	8a 81       	ldd	r24, Y+2	; 0x02
 516:	88 2f       	mov	r24, r24
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	81 30       	cpi	r24, 0x01	; 1
 51c:	91 05       	cpc	r25, r1
 51e:	b9 f0       	breq	.+46     	; 0x54e <Configure_Interrupt+0x408>
 520:	82 30       	cpi	r24, 0x02	; 2
 522:	91 05       	cpc	r25, r1
 524:	1c f4       	brge	.+6      	; 0x52c <Configure_Interrupt+0x3e6>
 526:	00 97       	sbiw	r24, 0x00	; 0
 528:	41 f0       	breq	.+16     	; 0x53a <Configure_Interrupt+0x3f4>
			break;
		case 2:EICRB=(EICRB&(~(1<<ISC71|1<<ISC70)))|(1<<ISC71|0<<ISC70);
			break;
		case 3:EICRB=(EICRB&(~(1<<ISC71|1<<ISC70)))|(1<<ISC71|1<<ISC70);
			break;
		default:break;
 52a:	31 c0       	rjmp	.+98     	; 0x58e <Configure_Interrupt+0x448>
		case 3:EICRB=(EICRB&(~(1<<ISC61|1<<ISC60)))|(1<<ISC61|1<<ISC60);
			break;
		default:break;
		}
		break;
	case 7: switch(INT_MODE){
 52c:	82 30       	cpi	r24, 0x02	; 2
 52e:	91 05       	cpc	r25, r1
 530:	c9 f0       	breq	.+50     	; 0x564 <Configure_Interrupt+0x41e>
 532:	83 30       	cpi	r24, 0x03	; 3
 534:	91 05       	cpc	r25, r1
 536:	09 f1       	breq	.+66     	; 0x57a <Configure_Interrupt+0x434>
			break;
		case 2:EICRB=(EICRB&(~(1<<ISC71|1<<ISC70)))|(1<<ISC71|0<<ISC70);
			break;
		case 3:EICRB=(EICRB&(~(1<<ISC71|1<<ISC70)))|(1<<ISC71|1<<ISC70);
			break;
		default:break;
 538:	2a c0       	rjmp	.+84     	; 0x58e <Configure_Interrupt+0x448>
			break;
		default:break;
		}
		break;
	case 7: switch(INT_MODE){
		case 0:EICRB=(EICRB&(~(1<<ISC71|1<<ISC70)))|(0<<ISC71|0<<ISC70);
 53a:	8a e6       	ldi	r24, 0x6A	; 106
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	2a e6       	ldi	r18, 0x6A	; 106
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	f9 01       	movw	r30, r18
 544:	20 81       	ld	r18, Z
 546:	2f 73       	andi	r18, 0x3F	; 63
 548:	fc 01       	movw	r30, r24
 54a:	20 83       	st	Z, r18
			break;
 54c:	20 c0       	rjmp	.+64     	; 0x58e <Configure_Interrupt+0x448>
		case 1:EICRB=(EICRB&(~(1<<ISC71|1<<ISC70)))|(0<<ISC71|1<<ISC70);
 54e:	8a e6       	ldi	r24, 0x6A	; 106
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	2a e6       	ldi	r18, 0x6A	; 106
 554:	30 e0       	ldi	r19, 0x00	; 0
 556:	f9 01       	movw	r30, r18
 558:	20 81       	ld	r18, Z
 55a:	2f 73       	andi	r18, 0x3F	; 63
 55c:	20 64       	ori	r18, 0x40	; 64
 55e:	fc 01       	movw	r30, r24
 560:	20 83       	st	Z, r18
			break;
 562:	15 c0       	rjmp	.+42     	; 0x58e <Configure_Interrupt+0x448>
		case 2:EICRB=(EICRB&(~(1<<ISC71|1<<ISC70)))|(1<<ISC71|0<<ISC70);
 564:	8a e6       	ldi	r24, 0x6A	; 106
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	2a e6       	ldi	r18, 0x6A	; 106
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	f9 01       	movw	r30, r18
 56e:	20 81       	ld	r18, Z
 570:	2f 73       	andi	r18, 0x3F	; 63
 572:	20 68       	ori	r18, 0x80	; 128
 574:	fc 01       	movw	r30, r24
 576:	20 83       	st	Z, r18
			break;
 578:	0a c0       	rjmp	.+20     	; 0x58e <Configure_Interrupt+0x448>
		case 3:EICRB=(EICRB&(~(1<<ISC71|1<<ISC70)))|(1<<ISC71|1<<ISC70);
 57a:	8a e6       	ldi	r24, 0x6A	; 106
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	2a e6       	ldi	r18, 0x6A	; 106
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	f9 01       	movw	r30, r18
 584:	20 81       	ld	r18, Z
 586:	20 6c       	ori	r18, 0xC0	; 192
 588:	fc 01       	movw	r30, r24
 58a:	20 83       	st	Z, r18
			break;
 58c:	00 00       	nop
		default:break;
		}
		break;
 58e:	00 00       	nop
	default:break;
	}
}
 590:	0f 90       	pop	r0
 592:	0f 90       	pop	r0
 594:	cf 91       	pop	r28
 596:	df 91       	pop	r29
 598:	08 95       	ret

0000059a <Enable_Interrupt>:
/*! \brief This function enables the external interrupt.
 *         
 *  \param INT_NO	The interrupt which has to be enabled.
 */
void Enable_Interrupt(uint8_t INT_NO)
{
 59a:	df 93       	push	r29
 59c:	cf 93       	push	r28
 59e:	0f 92       	push	r0
 5a0:	cd b7       	in	r28, 0x3d	; 61
 5a2:	de b7       	in	r29, 0x3e	; 62
 5a4:	89 83       	std	Y+1, r24	; 0x01
	switch(INT_NO){
 5a6:	89 81       	ldd	r24, Y+1	; 0x01
 5a8:	88 2f       	mov	r24, r24
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	83 30       	cpi	r24, 0x03	; 3
 5ae:	91 05       	cpc	r25, r1
 5b0:	d1 f1       	breq	.+116    	; 0x626 <Enable_Interrupt+0x8c>
 5b2:	84 30       	cpi	r24, 0x04	; 4
 5b4:	91 05       	cpc	r25, r1
 5b6:	4c f4       	brge	.+18     	; 0x5ca <Enable_Interrupt+0x30>
 5b8:	81 30       	cpi	r24, 0x01	; 1
 5ba:	91 05       	cpc	r25, r1
 5bc:	01 f1       	breq	.+64     	; 0x5fe <Enable_Interrupt+0x64>
 5be:	82 30       	cpi	r24, 0x02	; 2
 5c0:	91 05       	cpc	r25, r1
 5c2:	3c f5       	brge	.+78     	; 0x612 <Enable_Interrupt+0x78>
 5c4:	00 97       	sbiw	r24, 0x00	; 0
 5c6:	89 f0       	breq	.+34     	; 0x5ea <Enable_Interrupt+0x50>
		break;
	case 6:EIMSK=(EIMSK&(~(1<<INT6)))|(1<<INT6);
		break;
	case 7:EIMSK=(EIMSK&(~(1<<INT7)))|(1<<INT7);
		break;
	default:break;
 5c8:	60 c0       	rjmp	.+192    	; 0x68a <Enable_Interrupt+0xf0>
 *         
 *  \param INT_NO	The interrupt which has to be enabled.
 */
void Enable_Interrupt(uint8_t INT_NO)
{
	switch(INT_NO){
 5ca:	85 30       	cpi	r24, 0x05	; 5
 5cc:	91 05       	cpc	r25, r1
 5ce:	09 f4       	brne	.+2      	; 0x5d2 <Enable_Interrupt+0x38>
 5d0:	3e c0       	rjmp	.+124    	; 0x64e <Enable_Interrupt+0xb4>
 5d2:	85 30       	cpi	r24, 0x05	; 5
 5d4:	91 05       	cpc	r25, r1
 5d6:	8c f1       	brlt	.+98     	; 0x63a <Enable_Interrupt+0xa0>
 5d8:	86 30       	cpi	r24, 0x06	; 6
 5da:	91 05       	cpc	r25, r1
 5dc:	09 f4       	brne	.+2      	; 0x5e0 <Enable_Interrupt+0x46>
 5de:	41 c0       	rjmp	.+130    	; 0x662 <Enable_Interrupt+0xc8>
 5e0:	87 30       	cpi	r24, 0x07	; 7
 5e2:	91 05       	cpc	r25, r1
 5e4:	09 f4       	brne	.+2      	; 0x5e8 <Enable_Interrupt+0x4e>
 5e6:	47 c0       	rjmp	.+142    	; 0x676 <Enable_Interrupt+0xdc>
		break;
	case 6:EIMSK=(EIMSK&(~(1<<INT6)))|(1<<INT6);
		break;
	case 7:EIMSK=(EIMSK&(~(1<<INT7)))|(1<<INT7);
		break;
	default:break;
 5e8:	50 c0       	rjmp	.+160    	; 0x68a <Enable_Interrupt+0xf0>
 *  \param INT_NO	The interrupt which has to be enabled.
 */
void Enable_Interrupt(uint8_t INT_NO)
{
	switch(INT_NO){
	case 0:EIMSK=(EIMSK&(~(1<<INT0)))|(1<<INT0);
 5ea:	8d e3       	ldi	r24, 0x3D	; 61
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	2d e3       	ldi	r18, 0x3D	; 61
 5f0:	30 e0       	ldi	r19, 0x00	; 0
 5f2:	f9 01       	movw	r30, r18
 5f4:	20 81       	ld	r18, Z
 5f6:	21 60       	ori	r18, 0x01	; 1
 5f8:	fc 01       	movw	r30, r24
 5fa:	20 83       	st	Z, r18
		break;
 5fc:	46 c0       	rjmp	.+140    	; 0x68a <Enable_Interrupt+0xf0>
	case 1:EIMSK=(EIMSK&(~(1<<INT1)))|(1<<INT1);
 5fe:	8d e3       	ldi	r24, 0x3D	; 61
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	2d e3       	ldi	r18, 0x3D	; 61
 604:	30 e0       	ldi	r19, 0x00	; 0
 606:	f9 01       	movw	r30, r18
 608:	20 81       	ld	r18, Z
 60a:	22 60       	ori	r18, 0x02	; 2
 60c:	fc 01       	movw	r30, r24
 60e:	20 83       	st	Z, r18
		break;
 610:	3c c0       	rjmp	.+120    	; 0x68a <Enable_Interrupt+0xf0>
	case 2:EIMSK=(EIMSK&(~(1<<INT2)))|(1<<INT2);
 612:	8d e3       	ldi	r24, 0x3D	; 61
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	2d e3       	ldi	r18, 0x3D	; 61
 618:	30 e0       	ldi	r19, 0x00	; 0
 61a:	f9 01       	movw	r30, r18
 61c:	20 81       	ld	r18, Z
 61e:	24 60       	ori	r18, 0x04	; 4
 620:	fc 01       	movw	r30, r24
 622:	20 83       	st	Z, r18
		break;
 624:	32 c0       	rjmp	.+100    	; 0x68a <Enable_Interrupt+0xf0>
	case 3:EIMSK=(EIMSK&(~(1<<INT3)))|(1<<INT3);
 626:	8d e3       	ldi	r24, 0x3D	; 61
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	2d e3       	ldi	r18, 0x3D	; 61
 62c:	30 e0       	ldi	r19, 0x00	; 0
 62e:	f9 01       	movw	r30, r18
 630:	20 81       	ld	r18, Z
 632:	28 60       	ori	r18, 0x08	; 8
 634:	fc 01       	movw	r30, r24
 636:	20 83       	st	Z, r18
		break;
 638:	28 c0       	rjmp	.+80     	; 0x68a <Enable_Interrupt+0xf0>
	case 4:EIMSK=(EIMSK&(~(1<<INT4)))|(1<<INT4);
 63a:	8d e3       	ldi	r24, 0x3D	; 61
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	2d e3       	ldi	r18, 0x3D	; 61
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	f9 01       	movw	r30, r18
 644:	20 81       	ld	r18, Z
 646:	20 61       	ori	r18, 0x10	; 16
 648:	fc 01       	movw	r30, r24
 64a:	20 83       	st	Z, r18
		break;
 64c:	1e c0       	rjmp	.+60     	; 0x68a <Enable_Interrupt+0xf0>
	case 5:EIMSK=(EIMSK&(~(1<<INT5)))|(1<<INT5);
 64e:	8d e3       	ldi	r24, 0x3D	; 61
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	2d e3       	ldi	r18, 0x3D	; 61
 654:	30 e0       	ldi	r19, 0x00	; 0
 656:	f9 01       	movw	r30, r18
 658:	20 81       	ld	r18, Z
 65a:	20 62       	ori	r18, 0x20	; 32
 65c:	fc 01       	movw	r30, r24
 65e:	20 83       	st	Z, r18
		break;
 660:	14 c0       	rjmp	.+40     	; 0x68a <Enable_Interrupt+0xf0>
	case 6:EIMSK=(EIMSK&(~(1<<INT6)))|(1<<INT6);
 662:	8d e3       	ldi	r24, 0x3D	; 61
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	2d e3       	ldi	r18, 0x3D	; 61
 668:	30 e0       	ldi	r19, 0x00	; 0
 66a:	f9 01       	movw	r30, r18
 66c:	20 81       	ld	r18, Z
 66e:	20 64       	ori	r18, 0x40	; 64
 670:	fc 01       	movw	r30, r24
 672:	20 83       	st	Z, r18
		break;
 674:	0a c0       	rjmp	.+20     	; 0x68a <Enable_Interrupt+0xf0>
	case 7:EIMSK=(EIMSK&(~(1<<INT7)))|(1<<INT7);
 676:	8d e3       	ldi	r24, 0x3D	; 61
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	2d e3       	ldi	r18, 0x3D	; 61
 67c:	30 e0       	ldi	r19, 0x00	; 0
 67e:	f9 01       	movw	r30, r18
 680:	20 81       	ld	r18, Z
 682:	20 68       	ori	r18, 0x80	; 128
 684:	fc 01       	movw	r30, r24
 686:	20 83       	st	Z, r18
		break;
 688:	00 00       	nop
	default:break;
	}
}
 68a:	0f 90       	pop	r0
 68c:	cf 91       	pop	r28
 68e:	df 91       	pop	r29
 690:	08 95       	ret

00000692 <Enable_Pcinterrupt>:
/*! \brief This function enables the external pin change interrupt.
 *         
 *  \param PCINT_NO	The pin change interrupt which has to be enabled.
 */
void Enable_Pcinterrupt(uint8_t PCINT_NO)
{
 692:	df 93       	push	r29
 694:	cf 93       	push	r28
 696:	0f 92       	push	r0
 698:	cd b7       	in	r28, 0x3d	; 61
 69a:	de b7       	in	r29, 0x3e	; 62
 69c:	89 83       	std	Y+1, r24	; 0x01
	if(PCINT_NO>=0 && PCINT_NO<=7)
 69e:	89 81       	ldd	r24, Y+1	; 0x01
 6a0:	88 30       	cpi	r24, 0x08	; 8
 6a2:	08 f0       	brcs	.+2      	; 0x6a6 <Enable_Pcinterrupt+0x14>
 6a4:	7c c0       	rjmp	.+248    	; 0x79e <Enable_Pcinterrupt+0x10c>
	{
		PCICR=(PCICR&(~(1<<PCIE0)))|(1<<PCIE0);
 6a6:	88 e6       	ldi	r24, 0x68	; 104
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	28 e6       	ldi	r18, 0x68	; 104
 6ac:	30 e0       	ldi	r19, 0x00	; 0
 6ae:	f9 01       	movw	r30, r18
 6b0:	20 81       	ld	r18, Z
 6b2:	21 60       	ori	r18, 0x01	; 1
 6b4:	fc 01       	movw	r30, r24
 6b6:	20 83       	st	Z, r18
		switch(PCINT_NO){
 6b8:	89 81       	ldd	r24, Y+1	; 0x01
 6ba:	88 2f       	mov	r24, r24
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	83 30       	cpi	r24, 0x03	; 3
 6c0:	91 05       	cpc	r25, r1
 6c2:	d1 f1       	breq	.+116    	; 0x738 <Enable_Pcinterrupt+0xa6>
 6c4:	84 30       	cpi	r24, 0x04	; 4
 6c6:	91 05       	cpc	r25, r1
 6c8:	4c f4       	brge	.+18     	; 0x6dc <Enable_Pcinterrupt+0x4a>
 6ca:	81 30       	cpi	r24, 0x01	; 1
 6cc:	91 05       	cpc	r25, r1
 6ce:	01 f1       	breq	.+64     	; 0x710 <Enable_Pcinterrupt+0x7e>
 6d0:	82 30       	cpi	r24, 0x02	; 2
 6d2:	91 05       	cpc	r25, r1
 6d4:	3c f5       	brge	.+78     	; 0x724 <Enable_Pcinterrupt+0x92>
 6d6:	00 97       	sbiw	r24, 0x00	; 0
 6d8:	89 f0       	breq	.+34     	; 0x6fc <Enable_Pcinterrupt+0x6a>
			break;
		case 6:PCMSK0=(PCMSK0&(~(1<<PCINT6)))|(1<<PCINT6);
			break;
		case 7:PCMSK0=(PCMSK0&(~(1<<PCINT7)))|(1<<PCINT7);
			break;
		default:break;
 6da:	63 c1       	rjmp	.+710    	; 0x9a2 <Enable_Pcinterrupt+0x310>
void Enable_Pcinterrupt(uint8_t PCINT_NO)
{
	if(PCINT_NO>=0 && PCINT_NO<=7)
	{
		PCICR=(PCICR&(~(1<<PCIE0)))|(1<<PCIE0);
		switch(PCINT_NO){
 6dc:	85 30       	cpi	r24, 0x05	; 5
 6de:	91 05       	cpc	r25, r1
 6e0:	09 f4       	brne	.+2      	; 0x6e4 <Enable_Pcinterrupt+0x52>
 6e2:	3e c0       	rjmp	.+124    	; 0x760 <Enable_Pcinterrupt+0xce>
 6e4:	85 30       	cpi	r24, 0x05	; 5
 6e6:	91 05       	cpc	r25, r1
 6e8:	8c f1       	brlt	.+98     	; 0x74c <Enable_Pcinterrupt+0xba>
 6ea:	86 30       	cpi	r24, 0x06	; 6
 6ec:	91 05       	cpc	r25, r1
 6ee:	09 f4       	brne	.+2      	; 0x6f2 <Enable_Pcinterrupt+0x60>
 6f0:	41 c0       	rjmp	.+130    	; 0x774 <Enable_Pcinterrupt+0xe2>
 6f2:	87 30       	cpi	r24, 0x07	; 7
 6f4:	91 05       	cpc	r25, r1
 6f6:	09 f4       	brne	.+2      	; 0x6fa <Enable_Pcinterrupt+0x68>
 6f8:	47 c0       	rjmp	.+142    	; 0x788 <Enable_Pcinterrupt+0xf6>
			break;
		case 6:PCMSK0=(PCMSK0&(~(1<<PCINT6)))|(1<<PCINT6);
			break;
		case 7:PCMSK0=(PCMSK0&(~(1<<PCINT7)))|(1<<PCINT7);
			break;
		default:break;
 6fa:	53 c1       	rjmp	.+678    	; 0x9a2 <Enable_Pcinterrupt+0x310>
{
	if(PCINT_NO>=0 && PCINT_NO<=7)
	{
		PCICR=(PCICR&(~(1<<PCIE0)))|(1<<PCIE0);
		switch(PCINT_NO){
		case 0:PCMSK0=(PCMSK0&(~(1<<PCINT0)))|(1<<PCINT0);
 6fc:	8b e6       	ldi	r24, 0x6B	; 107
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	2b e6       	ldi	r18, 0x6B	; 107
 702:	30 e0       	ldi	r19, 0x00	; 0
 704:	f9 01       	movw	r30, r18
 706:	20 81       	ld	r18, Z
 708:	21 60       	ori	r18, 0x01	; 1
 70a:	fc 01       	movw	r30, r24
 70c:	20 83       	st	Z, r18
			break;
 70e:	49 c1       	rjmp	.+658    	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 1:PCMSK0=(PCMSK0&(~(1<<PCINT1)))|(1<<PCINT1);
 710:	8b e6       	ldi	r24, 0x6B	; 107
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	2b e6       	ldi	r18, 0x6B	; 107
 716:	30 e0       	ldi	r19, 0x00	; 0
 718:	f9 01       	movw	r30, r18
 71a:	20 81       	ld	r18, Z
 71c:	22 60       	ori	r18, 0x02	; 2
 71e:	fc 01       	movw	r30, r24
 720:	20 83       	st	Z, r18
			break;
 722:	3f c1       	rjmp	.+638    	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 2:PCMSK0=(PCMSK0&(~(1<<PCINT2)))|(1<<PCINT2);
 724:	8b e6       	ldi	r24, 0x6B	; 107
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	2b e6       	ldi	r18, 0x6B	; 107
 72a:	30 e0       	ldi	r19, 0x00	; 0
 72c:	f9 01       	movw	r30, r18
 72e:	20 81       	ld	r18, Z
 730:	24 60       	ori	r18, 0x04	; 4
 732:	fc 01       	movw	r30, r24
 734:	20 83       	st	Z, r18
			break;
 736:	35 c1       	rjmp	.+618    	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 3:PCMSK0=(PCMSK0&(~(1<<PCINT3)))|(1<<PCINT3);
 738:	8b e6       	ldi	r24, 0x6B	; 107
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	2b e6       	ldi	r18, 0x6B	; 107
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	f9 01       	movw	r30, r18
 742:	20 81       	ld	r18, Z
 744:	28 60       	ori	r18, 0x08	; 8
 746:	fc 01       	movw	r30, r24
 748:	20 83       	st	Z, r18
			break;
 74a:	2b c1       	rjmp	.+598    	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 4:PCMSK0=(PCMSK0&(~(1<<PCINT4)))|(1<<PCINT4);
 74c:	8b e6       	ldi	r24, 0x6B	; 107
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	2b e6       	ldi	r18, 0x6B	; 107
 752:	30 e0       	ldi	r19, 0x00	; 0
 754:	f9 01       	movw	r30, r18
 756:	20 81       	ld	r18, Z
 758:	20 61       	ori	r18, 0x10	; 16
 75a:	fc 01       	movw	r30, r24
 75c:	20 83       	st	Z, r18
			break;
 75e:	21 c1       	rjmp	.+578    	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 5:PCMSK0=(PCMSK0&(~(1<<PCINT5)))|(1<<PCINT5);
 760:	8b e6       	ldi	r24, 0x6B	; 107
 762:	90 e0       	ldi	r25, 0x00	; 0
 764:	2b e6       	ldi	r18, 0x6B	; 107
 766:	30 e0       	ldi	r19, 0x00	; 0
 768:	f9 01       	movw	r30, r18
 76a:	20 81       	ld	r18, Z
 76c:	20 62       	ori	r18, 0x20	; 32
 76e:	fc 01       	movw	r30, r24
 770:	20 83       	st	Z, r18
			break;
 772:	17 c1       	rjmp	.+558    	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 6:PCMSK0=(PCMSK0&(~(1<<PCINT6)))|(1<<PCINT6);
 774:	8b e6       	ldi	r24, 0x6B	; 107
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	2b e6       	ldi	r18, 0x6B	; 107
 77a:	30 e0       	ldi	r19, 0x00	; 0
 77c:	f9 01       	movw	r30, r18
 77e:	20 81       	ld	r18, Z
 780:	20 64       	ori	r18, 0x40	; 64
 782:	fc 01       	movw	r30, r24
 784:	20 83       	st	Z, r18
			break;
 786:	0d c1       	rjmp	.+538    	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 7:PCMSK0=(PCMSK0&(~(1<<PCINT7)))|(1<<PCINT7);
 788:	8b e6       	ldi	r24, 0x6B	; 107
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	2b e6       	ldi	r18, 0x6B	; 107
 78e:	30 e0       	ldi	r19, 0x00	; 0
 790:	f9 01       	movw	r30, r18
 792:	20 81       	ld	r18, Z
 794:	20 68       	ori	r18, 0x80	; 128
 796:	fc 01       	movw	r30, r24
 798:	20 83       	st	Z, r18
			break;
 79a:	00 00       	nop
 79c:	02 c1       	rjmp	.+516    	; 0x9a2 <Enable_Pcinterrupt+0x310>
		default:break;
		}
	}
	else if(PCINT_NO>=8 && PCINT_NO<=15)
 79e:	89 81       	ldd	r24, Y+1	; 0x01
 7a0:	88 30       	cpi	r24, 0x08	; 8
 7a2:	08 f4       	brcc	.+2      	; 0x7a6 <Enable_Pcinterrupt+0x114>
 7a4:	82 c0       	rjmp	.+260    	; 0x8aa <Enable_Pcinterrupt+0x218>
 7a6:	89 81       	ldd	r24, Y+1	; 0x01
 7a8:	80 31       	cpi	r24, 0x10	; 16
 7aa:	08 f0       	brcs	.+2      	; 0x7ae <Enable_Pcinterrupt+0x11c>
 7ac:	7e c0       	rjmp	.+252    	; 0x8aa <Enable_Pcinterrupt+0x218>
	{
		PCICR=(PCICR&(~(1<<PCIE1)))|(1<<PCIE1);	
 7ae:	88 e6       	ldi	r24, 0x68	; 104
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	28 e6       	ldi	r18, 0x68	; 104
 7b4:	30 e0       	ldi	r19, 0x00	; 0
 7b6:	f9 01       	movw	r30, r18
 7b8:	20 81       	ld	r18, Z
 7ba:	22 60       	ori	r18, 0x02	; 2
 7bc:	fc 01       	movw	r30, r24
 7be:	20 83       	st	Z, r18
		switch(PCINT_NO){
 7c0:	89 81       	ldd	r24, Y+1	; 0x01
 7c2:	88 2f       	mov	r24, r24
 7c4:	90 e0       	ldi	r25, 0x00	; 0
 7c6:	8b 30       	cpi	r24, 0x0B	; 11
 7c8:	91 05       	cpc	r25, r1
 7ca:	d9 f1       	breq	.+118    	; 0x842 <Enable_Pcinterrupt+0x1b0>
 7cc:	8c 30       	cpi	r24, 0x0C	; 12
 7ce:	91 05       	cpc	r25, r1
 7d0:	54 f4       	brge	.+20     	; 0x7e6 <Enable_Pcinterrupt+0x154>
 7d2:	89 30       	cpi	r24, 0x09	; 9
 7d4:	91 05       	cpc	r25, r1
 7d6:	09 f1       	breq	.+66     	; 0x81a <Enable_Pcinterrupt+0x188>
 7d8:	8a 30       	cpi	r24, 0x0A	; 10
 7da:	91 05       	cpc	r25, r1
 7dc:	44 f5       	brge	.+80     	; 0x82e <Enable_Pcinterrupt+0x19c>
 7de:	88 30       	cpi	r24, 0x08	; 8
 7e0:	91 05       	cpc	r25, r1
 7e2:	89 f0       	breq	.+34     	; 0x806 <Enable_Pcinterrupt+0x174>
 7e4:	60 c0       	rjmp	.+192    	; 0x8a6 <Enable_Pcinterrupt+0x214>
 7e6:	8d 30       	cpi	r24, 0x0D	; 13
 7e8:	91 05       	cpc	r25, r1
 7ea:	09 f4       	brne	.+2      	; 0x7ee <Enable_Pcinterrupt+0x15c>
 7ec:	3e c0       	rjmp	.+124    	; 0x86a <Enable_Pcinterrupt+0x1d8>
 7ee:	8d 30       	cpi	r24, 0x0D	; 13
 7f0:	91 05       	cpc	r25, r1
 7f2:	8c f1       	brlt	.+98     	; 0x856 <Enable_Pcinterrupt+0x1c4>
 7f4:	8e 30       	cpi	r24, 0x0E	; 14
 7f6:	91 05       	cpc	r25, r1
 7f8:	09 f4       	brne	.+2      	; 0x7fc <Enable_Pcinterrupt+0x16a>
 7fa:	41 c0       	rjmp	.+130    	; 0x87e <Enable_Pcinterrupt+0x1ec>
 7fc:	8f 30       	cpi	r24, 0x0F	; 15
 7fe:	91 05       	cpc	r25, r1
 800:	09 f4       	brne	.+2      	; 0x804 <Enable_Pcinterrupt+0x172>
 802:	47 c0       	rjmp	.+142    	; 0x892 <Enable_Pcinterrupt+0x200>
 804:	50 c0       	rjmp	.+160    	; 0x8a6 <Enable_Pcinterrupt+0x214>
		case 8:PCMSK1=(PCMSK1&(~(1<<PCINT8)))|(1<<PCINT8);
 806:	8c e6       	ldi	r24, 0x6C	; 108
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	2c e6       	ldi	r18, 0x6C	; 108
 80c:	30 e0       	ldi	r19, 0x00	; 0
 80e:	f9 01       	movw	r30, r18
 810:	20 81       	ld	r18, Z
 812:	21 60       	ori	r18, 0x01	; 1
 814:	fc 01       	movw	r30, r24
 816:	20 83       	st	Z, r18
			break;
 818:	47 c0       	rjmp	.+142    	; 0x8a8 <Enable_Pcinterrupt+0x216>
		case 9:PCMSK1=(PCMSK1&(~(1<<PCINT9)))|(1<<PCINT9);
 81a:	8c e6       	ldi	r24, 0x6C	; 108
 81c:	90 e0       	ldi	r25, 0x00	; 0
 81e:	2c e6       	ldi	r18, 0x6C	; 108
 820:	30 e0       	ldi	r19, 0x00	; 0
 822:	f9 01       	movw	r30, r18
 824:	20 81       	ld	r18, Z
 826:	22 60       	ori	r18, 0x02	; 2
 828:	fc 01       	movw	r30, r24
 82a:	20 83       	st	Z, r18
			break;
 82c:	3d c0       	rjmp	.+122    	; 0x8a8 <Enable_Pcinterrupt+0x216>
		case 10:PCMSK1=(PCMSK1&(~(1<<PCINT10)))|(1<<PCINT10);
 82e:	8c e6       	ldi	r24, 0x6C	; 108
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	2c e6       	ldi	r18, 0x6C	; 108
 834:	30 e0       	ldi	r19, 0x00	; 0
 836:	f9 01       	movw	r30, r18
 838:	20 81       	ld	r18, Z
 83a:	24 60       	ori	r18, 0x04	; 4
 83c:	fc 01       	movw	r30, r24
 83e:	20 83       	st	Z, r18
			break;
 840:	33 c0       	rjmp	.+102    	; 0x8a8 <Enable_Pcinterrupt+0x216>
		case 11:PCMSK1=(PCMSK1&(~(1<<PCINT11)))|(1<<PCINT11);
 842:	8c e6       	ldi	r24, 0x6C	; 108
 844:	90 e0       	ldi	r25, 0x00	; 0
 846:	2c e6       	ldi	r18, 0x6C	; 108
 848:	30 e0       	ldi	r19, 0x00	; 0
 84a:	f9 01       	movw	r30, r18
 84c:	20 81       	ld	r18, Z
 84e:	28 60       	ori	r18, 0x08	; 8
 850:	fc 01       	movw	r30, r24
 852:	20 83       	st	Z, r18
			break;
 854:	29 c0       	rjmp	.+82     	; 0x8a8 <Enable_Pcinterrupt+0x216>
		case 12:PCMSK1=(PCMSK1&(~(1<<PCINT12)))|(1<<PCINT12);
 856:	8c e6       	ldi	r24, 0x6C	; 108
 858:	90 e0       	ldi	r25, 0x00	; 0
 85a:	2c e6       	ldi	r18, 0x6C	; 108
 85c:	30 e0       	ldi	r19, 0x00	; 0
 85e:	f9 01       	movw	r30, r18
 860:	20 81       	ld	r18, Z
 862:	20 61       	ori	r18, 0x10	; 16
 864:	fc 01       	movw	r30, r24
 866:	20 83       	st	Z, r18
			break;
 868:	1f c0       	rjmp	.+62     	; 0x8a8 <Enable_Pcinterrupt+0x216>
		case 13:PCMSK1=(PCMSK1&(~(1<<PCINT13)))|(1<<PCINT13);
 86a:	8c e6       	ldi	r24, 0x6C	; 108
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	2c e6       	ldi	r18, 0x6C	; 108
 870:	30 e0       	ldi	r19, 0x00	; 0
 872:	f9 01       	movw	r30, r18
 874:	20 81       	ld	r18, Z
 876:	20 62       	ori	r18, 0x20	; 32
 878:	fc 01       	movw	r30, r24
 87a:	20 83       	st	Z, r18
			break;
 87c:	15 c0       	rjmp	.+42     	; 0x8a8 <Enable_Pcinterrupt+0x216>
		case 14:PCMSK1=(PCMSK1&(~(1<<PCINT14)))|(1<<PCINT14);
 87e:	8c e6       	ldi	r24, 0x6C	; 108
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	2c e6       	ldi	r18, 0x6C	; 108
 884:	30 e0       	ldi	r19, 0x00	; 0
 886:	f9 01       	movw	r30, r18
 888:	20 81       	ld	r18, Z
 88a:	20 64       	ori	r18, 0x40	; 64
 88c:	fc 01       	movw	r30, r24
 88e:	20 83       	st	Z, r18
			break;
 890:	0b c0       	rjmp	.+22     	; 0x8a8 <Enable_Pcinterrupt+0x216>
		case 15:PCMSK1=(PCMSK1&(~(1<<PCINT15)))|(1<<PCINT15);
 892:	8c e6       	ldi	r24, 0x6C	; 108
 894:	90 e0       	ldi	r25, 0x00	; 0
 896:	2c e6       	ldi	r18, 0x6C	; 108
 898:	30 e0       	ldi	r19, 0x00	; 0
 89a:	f9 01       	movw	r30, r18
 89c:	20 81       	ld	r18, Z
 89e:	20 68       	ori	r18, 0x80	; 128
 8a0:	fc 01       	movw	r30, r24
 8a2:	20 83       	st	Z, r18
			break;
 8a4:	01 c0       	rjmp	.+2      	; 0x8a8 <Enable_Pcinterrupt+0x216>
		default:break;
 8a6:	00 00       	nop
		}
	}
 8a8:	7c c0       	rjmp	.+248    	; 0x9a2 <Enable_Pcinterrupt+0x310>
	else
	{
		PCICR=(PCICR&(~(1<<PCIE2)))|(1<<PCIE2);
 8aa:	88 e6       	ldi	r24, 0x68	; 104
 8ac:	90 e0       	ldi	r25, 0x00	; 0
 8ae:	28 e6       	ldi	r18, 0x68	; 104
 8b0:	30 e0       	ldi	r19, 0x00	; 0
 8b2:	f9 01       	movw	r30, r18
 8b4:	20 81       	ld	r18, Z
 8b6:	24 60       	ori	r18, 0x04	; 4
 8b8:	fc 01       	movw	r30, r24
 8ba:	20 83       	st	Z, r18
		switch(PCINT_NO){
 8bc:	89 81       	ldd	r24, Y+1	; 0x01
 8be:	88 2f       	mov	r24, r24
 8c0:	90 e0       	ldi	r25, 0x00	; 0
 8c2:	83 31       	cpi	r24, 0x13	; 19
 8c4:	91 05       	cpc	r25, r1
 8c6:	d9 f1       	breq	.+118    	; 0x93e <Enable_Pcinterrupt+0x2ac>
 8c8:	84 31       	cpi	r24, 0x14	; 20
 8ca:	91 05       	cpc	r25, r1
 8cc:	54 f4       	brge	.+20     	; 0x8e2 <Enable_Pcinterrupt+0x250>
 8ce:	81 31       	cpi	r24, 0x11	; 17
 8d0:	91 05       	cpc	r25, r1
 8d2:	09 f1       	breq	.+66     	; 0x916 <Enable_Pcinterrupt+0x284>
 8d4:	82 31       	cpi	r24, 0x12	; 18
 8d6:	91 05       	cpc	r25, r1
 8d8:	44 f5       	brge	.+80     	; 0x92a <Enable_Pcinterrupt+0x298>
 8da:	80 31       	cpi	r24, 0x10	; 16
 8dc:	91 05       	cpc	r25, r1
 8de:	89 f0       	breq	.+34     	; 0x902 <Enable_Pcinterrupt+0x270>
			break;
		case 22:PCMSK2=(PCMSK2&(~(1<<PCINT22)))|(1<<PCINT22);
			break;
		case 23:PCMSK2=(PCMSK2&(~(1<<PCINT23)))|(1<<PCINT23);
			break;
		default:break;
 8e0:	60 c0       	rjmp	.+192    	; 0x9a2 <Enable_Pcinterrupt+0x310>
		}
	}
	else
	{
		PCICR=(PCICR&(~(1<<PCIE2)))|(1<<PCIE2);
		switch(PCINT_NO){
 8e2:	85 31       	cpi	r24, 0x15	; 21
 8e4:	91 05       	cpc	r25, r1
 8e6:	09 f4       	brne	.+2      	; 0x8ea <Enable_Pcinterrupt+0x258>
 8e8:	3e c0       	rjmp	.+124    	; 0x966 <Enable_Pcinterrupt+0x2d4>
 8ea:	85 31       	cpi	r24, 0x15	; 21
 8ec:	91 05       	cpc	r25, r1
 8ee:	8c f1       	brlt	.+98     	; 0x952 <Enable_Pcinterrupt+0x2c0>
 8f0:	86 31       	cpi	r24, 0x16	; 22
 8f2:	91 05       	cpc	r25, r1
 8f4:	09 f4       	brne	.+2      	; 0x8f8 <Enable_Pcinterrupt+0x266>
 8f6:	41 c0       	rjmp	.+130    	; 0x97a <Enable_Pcinterrupt+0x2e8>
 8f8:	87 31       	cpi	r24, 0x17	; 23
 8fa:	91 05       	cpc	r25, r1
 8fc:	09 f4       	brne	.+2      	; 0x900 <Enable_Pcinterrupt+0x26e>
 8fe:	47 c0       	rjmp	.+142    	; 0x98e <Enable_Pcinterrupt+0x2fc>
			break;
		case 22:PCMSK2=(PCMSK2&(~(1<<PCINT22)))|(1<<PCINT22);
			break;
		case 23:PCMSK2=(PCMSK2&(~(1<<PCINT23)))|(1<<PCINT23);
			break;
		default:break;
 900:	50 c0       	rjmp	.+160    	; 0x9a2 <Enable_Pcinterrupt+0x310>
	}
	else
	{
		PCICR=(PCICR&(~(1<<PCIE2)))|(1<<PCIE2);
		switch(PCINT_NO){
		case 16:PCMSK2=(PCMSK2&(~(1<<PCINT16)))|(1<<PCINT16);
 902:	8d e6       	ldi	r24, 0x6D	; 109
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	2d e6       	ldi	r18, 0x6D	; 109
 908:	30 e0       	ldi	r19, 0x00	; 0
 90a:	f9 01       	movw	r30, r18
 90c:	20 81       	ld	r18, Z
 90e:	21 60       	ori	r18, 0x01	; 1
 910:	fc 01       	movw	r30, r24
 912:	20 83       	st	Z, r18
			break;
 914:	46 c0       	rjmp	.+140    	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 17:PCMSK2=(PCMSK2&(~(1<<PCINT17)))|(1<<PCINT17);
 916:	8d e6       	ldi	r24, 0x6D	; 109
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	2d e6       	ldi	r18, 0x6D	; 109
 91c:	30 e0       	ldi	r19, 0x00	; 0
 91e:	f9 01       	movw	r30, r18
 920:	20 81       	ld	r18, Z
 922:	22 60       	ori	r18, 0x02	; 2
 924:	fc 01       	movw	r30, r24
 926:	20 83       	st	Z, r18
			break;
 928:	3c c0       	rjmp	.+120    	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 18:PCMSK2=(PCMSK2&(~(1<<PCINT18)))|(1<<PCINT18);
 92a:	8d e6       	ldi	r24, 0x6D	; 109
 92c:	90 e0       	ldi	r25, 0x00	; 0
 92e:	2d e6       	ldi	r18, 0x6D	; 109
 930:	30 e0       	ldi	r19, 0x00	; 0
 932:	f9 01       	movw	r30, r18
 934:	20 81       	ld	r18, Z
 936:	24 60       	ori	r18, 0x04	; 4
 938:	fc 01       	movw	r30, r24
 93a:	20 83       	st	Z, r18
			break;
 93c:	32 c0       	rjmp	.+100    	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 19:PCMSK2=(PCMSK2&(~(1<<PCINT19)))|(1<<PCINT19);
 93e:	8d e6       	ldi	r24, 0x6D	; 109
 940:	90 e0       	ldi	r25, 0x00	; 0
 942:	2d e6       	ldi	r18, 0x6D	; 109
 944:	30 e0       	ldi	r19, 0x00	; 0
 946:	f9 01       	movw	r30, r18
 948:	20 81       	ld	r18, Z
 94a:	28 60       	ori	r18, 0x08	; 8
 94c:	fc 01       	movw	r30, r24
 94e:	20 83       	st	Z, r18
			break;
 950:	28 c0       	rjmp	.+80     	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 20:PCMSK2=(PCMSK2&(~(1<<PCINT20)))|(1<<PCINT20);
 952:	8d e6       	ldi	r24, 0x6D	; 109
 954:	90 e0       	ldi	r25, 0x00	; 0
 956:	2d e6       	ldi	r18, 0x6D	; 109
 958:	30 e0       	ldi	r19, 0x00	; 0
 95a:	f9 01       	movw	r30, r18
 95c:	20 81       	ld	r18, Z
 95e:	20 61       	ori	r18, 0x10	; 16
 960:	fc 01       	movw	r30, r24
 962:	20 83       	st	Z, r18
			break;
 964:	1e c0       	rjmp	.+60     	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 21:PCMSK2=(PCMSK2&(~(1<<PCINT21)))|(1<<PCINT21);
 966:	8d e6       	ldi	r24, 0x6D	; 109
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	2d e6       	ldi	r18, 0x6D	; 109
 96c:	30 e0       	ldi	r19, 0x00	; 0
 96e:	f9 01       	movw	r30, r18
 970:	20 81       	ld	r18, Z
 972:	20 62       	ori	r18, 0x20	; 32
 974:	fc 01       	movw	r30, r24
 976:	20 83       	st	Z, r18
			break;
 978:	14 c0       	rjmp	.+40     	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 22:PCMSK2=(PCMSK2&(~(1<<PCINT22)))|(1<<PCINT22);
 97a:	8d e6       	ldi	r24, 0x6D	; 109
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	2d e6       	ldi	r18, 0x6D	; 109
 980:	30 e0       	ldi	r19, 0x00	; 0
 982:	f9 01       	movw	r30, r18
 984:	20 81       	ld	r18, Z
 986:	20 64       	ori	r18, 0x40	; 64
 988:	fc 01       	movw	r30, r24
 98a:	20 83       	st	Z, r18
			break;
 98c:	0a c0       	rjmp	.+20     	; 0x9a2 <Enable_Pcinterrupt+0x310>
		case 23:PCMSK2=(PCMSK2&(~(1<<PCINT23)))|(1<<PCINT23);
 98e:	8d e6       	ldi	r24, 0x6D	; 109
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	2d e6       	ldi	r18, 0x6D	; 109
 994:	30 e0       	ldi	r19, 0x00	; 0
 996:	f9 01       	movw	r30, r18
 998:	20 81       	ld	r18, Z
 99a:	20 68       	ori	r18, 0x80	; 128
 99c:	fc 01       	movw	r30, r24
 99e:	20 83       	st	Z, r18
			break;
 9a0:	00 00       	nop
		default:break;
		}
	}
}
 9a2:	0f 90       	pop	r0
 9a4:	cf 91       	pop	r28
 9a6:	df 91       	pop	r29
 9a8:	08 95       	ret

000009aa <Disable_Interrupt>:
/*! \brief This function disables the external interrupt.
 *         
 *  \param INT_NO	The interrupt which has to be disabled.
 */
void Disable_Interrupt(uint8_t INT_NO)
{
 9aa:	df 93       	push	r29
 9ac:	cf 93       	push	r28
 9ae:	0f 92       	push	r0
 9b0:	cd b7       	in	r28, 0x3d	; 61
 9b2:	de b7       	in	r29, 0x3e	; 62
 9b4:	89 83       	std	Y+1, r24	; 0x01
	switch(INT_NO){
 9b6:	89 81       	ldd	r24, Y+1	; 0x01
 9b8:	88 2f       	mov	r24, r24
 9ba:	90 e0       	ldi	r25, 0x00	; 0
 9bc:	83 30       	cpi	r24, 0x03	; 3
 9be:	91 05       	cpc	r25, r1
 9c0:	d1 f1       	breq	.+116    	; 0xa36 <Disable_Interrupt+0x8c>
 9c2:	84 30       	cpi	r24, 0x04	; 4
 9c4:	91 05       	cpc	r25, r1
 9c6:	4c f4       	brge	.+18     	; 0x9da <Disable_Interrupt+0x30>
 9c8:	81 30       	cpi	r24, 0x01	; 1
 9ca:	91 05       	cpc	r25, r1
 9cc:	01 f1       	breq	.+64     	; 0xa0e <Disable_Interrupt+0x64>
 9ce:	82 30       	cpi	r24, 0x02	; 2
 9d0:	91 05       	cpc	r25, r1
 9d2:	3c f5       	brge	.+78     	; 0xa22 <Disable_Interrupt+0x78>
 9d4:	00 97       	sbiw	r24, 0x00	; 0
 9d6:	89 f0       	breq	.+34     	; 0x9fa <Disable_Interrupt+0x50>
		break;
	case 6:EIMSK=(EIMSK&(~(1<<INT6)));
		break;
	case 7:EIMSK=(EIMSK&(~(1<<INT7)));
		break;
	default:break;
 9d8:	60 c0       	rjmp	.+192    	; 0xa9a <Disable_Interrupt+0xf0>
 *         
 *  \param INT_NO	The interrupt which has to be disabled.
 */
void Disable_Interrupt(uint8_t INT_NO)
{
	switch(INT_NO){
 9da:	85 30       	cpi	r24, 0x05	; 5
 9dc:	91 05       	cpc	r25, r1
 9de:	09 f4       	brne	.+2      	; 0x9e2 <Disable_Interrupt+0x38>
 9e0:	3e c0       	rjmp	.+124    	; 0xa5e <Disable_Interrupt+0xb4>
 9e2:	85 30       	cpi	r24, 0x05	; 5
 9e4:	91 05       	cpc	r25, r1
 9e6:	8c f1       	brlt	.+98     	; 0xa4a <Disable_Interrupt+0xa0>
 9e8:	86 30       	cpi	r24, 0x06	; 6
 9ea:	91 05       	cpc	r25, r1
 9ec:	09 f4       	brne	.+2      	; 0x9f0 <Disable_Interrupt+0x46>
 9ee:	41 c0       	rjmp	.+130    	; 0xa72 <Disable_Interrupt+0xc8>
 9f0:	87 30       	cpi	r24, 0x07	; 7
 9f2:	91 05       	cpc	r25, r1
 9f4:	09 f4       	brne	.+2      	; 0x9f8 <Disable_Interrupt+0x4e>
 9f6:	47 c0       	rjmp	.+142    	; 0xa86 <Disable_Interrupt+0xdc>
		break;
	case 6:EIMSK=(EIMSK&(~(1<<INT6)));
		break;
	case 7:EIMSK=(EIMSK&(~(1<<INT7)));
		break;
	default:break;
 9f8:	50 c0       	rjmp	.+160    	; 0xa9a <Disable_Interrupt+0xf0>
 *  \param INT_NO	The interrupt which has to be disabled.
 */
void Disable_Interrupt(uint8_t INT_NO)
{
	switch(INT_NO){
	case 0:EIMSK=(EIMSK&(~(1<<INT0)));
 9fa:	8d e3       	ldi	r24, 0x3D	; 61
 9fc:	90 e0       	ldi	r25, 0x00	; 0
 9fe:	2d e3       	ldi	r18, 0x3D	; 61
 a00:	30 e0       	ldi	r19, 0x00	; 0
 a02:	f9 01       	movw	r30, r18
 a04:	20 81       	ld	r18, Z
 a06:	2e 7f       	andi	r18, 0xFE	; 254
 a08:	fc 01       	movw	r30, r24
 a0a:	20 83       	st	Z, r18
		break;
 a0c:	46 c0       	rjmp	.+140    	; 0xa9a <Disable_Interrupt+0xf0>
	case 1:EIMSK=(EIMSK&(~(1<<INT1)));
 a0e:	8d e3       	ldi	r24, 0x3D	; 61
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	2d e3       	ldi	r18, 0x3D	; 61
 a14:	30 e0       	ldi	r19, 0x00	; 0
 a16:	f9 01       	movw	r30, r18
 a18:	20 81       	ld	r18, Z
 a1a:	2d 7f       	andi	r18, 0xFD	; 253
 a1c:	fc 01       	movw	r30, r24
 a1e:	20 83       	st	Z, r18
		break;
 a20:	3c c0       	rjmp	.+120    	; 0xa9a <Disable_Interrupt+0xf0>
	case 2:EIMSK=(EIMSK&(~(1<<INT2)));
 a22:	8d e3       	ldi	r24, 0x3D	; 61
 a24:	90 e0       	ldi	r25, 0x00	; 0
 a26:	2d e3       	ldi	r18, 0x3D	; 61
 a28:	30 e0       	ldi	r19, 0x00	; 0
 a2a:	f9 01       	movw	r30, r18
 a2c:	20 81       	ld	r18, Z
 a2e:	2b 7f       	andi	r18, 0xFB	; 251
 a30:	fc 01       	movw	r30, r24
 a32:	20 83       	st	Z, r18
		break;
 a34:	32 c0       	rjmp	.+100    	; 0xa9a <Disable_Interrupt+0xf0>
	case 3:EIMSK=(EIMSK&(~(1<<INT3)));
 a36:	8d e3       	ldi	r24, 0x3D	; 61
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	2d e3       	ldi	r18, 0x3D	; 61
 a3c:	30 e0       	ldi	r19, 0x00	; 0
 a3e:	f9 01       	movw	r30, r18
 a40:	20 81       	ld	r18, Z
 a42:	27 7f       	andi	r18, 0xF7	; 247
 a44:	fc 01       	movw	r30, r24
 a46:	20 83       	st	Z, r18
		break;
 a48:	28 c0       	rjmp	.+80     	; 0xa9a <Disable_Interrupt+0xf0>
	case 4:EIMSK=(EIMSK&(~(1<<INT4)));
 a4a:	8d e3       	ldi	r24, 0x3D	; 61
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	2d e3       	ldi	r18, 0x3D	; 61
 a50:	30 e0       	ldi	r19, 0x00	; 0
 a52:	f9 01       	movw	r30, r18
 a54:	20 81       	ld	r18, Z
 a56:	2f 7e       	andi	r18, 0xEF	; 239
 a58:	fc 01       	movw	r30, r24
 a5a:	20 83       	st	Z, r18
		break;
 a5c:	1e c0       	rjmp	.+60     	; 0xa9a <Disable_Interrupt+0xf0>
	case 5:EIMSK=(EIMSK&(~(1<<INT5)));
 a5e:	8d e3       	ldi	r24, 0x3D	; 61
 a60:	90 e0       	ldi	r25, 0x00	; 0
 a62:	2d e3       	ldi	r18, 0x3D	; 61
 a64:	30 e0       	ldi	r19, 0x00	; 0
 a66:	f9 01       	movw	r30, r18
 a68:	20 81       	ld	r18, Z
 a6a:	2f 7d       	andi	r18, 0xDF	; 223
 a6c:	fc 01       	movw	r30, r24
 a6e:	20 83       	st	Z, r18
		break;
 a70:	14 c0       	rjmp	.+40     	; 0xa9a <Disable_Interrupt+0xf0>
	case 6:EIMSK=(EIMSK&(~(1<<INT6)));
 a72:	8d e3       	ldi	r24, 0x3D	; 61
 a74:	90 e0       	ldi	r25, 0x00	; 0
 a76:	2d e3       	ldi	r18, 0x3D	; 61
 a78:	30 e0       	ldi	r19, 0x00	; 0
 a7a:	f9 01       	movw	r30, r18
 a7c:	20 81       	ld	r18, Z
 a7e:	2f 7b       	andi	r18, 0xBF	; 191
 a80:	fc 01       	movw	r30, r24
 a82:	20 83       	st	Z, r18
		break;
 a84:	0a c0       	rjmp	.+20     	; 0xa9a <Disable_Interrupt+0xf0>
	case 7:EIMSK=(EIMSK&(~(1<<INT7)));
 a86:	8d e3       	ldi	r24, 0x3D	; 61
 a88:	90 e0       	ldi	r25, 0x00	; 0
 a8a:	2d e3       	ldi	r18, 0x3D	; 61
 a8c:	30 e0       	ldi	r19, 0x00	; 0
 a8e:	f9 01       	movw	r30, r18
 a90:	20 81       	ld	r18, Z
 a92:	2f 77       	andi	r18, 0x7F	; 127
 a94:	fc 01       	movw	r30, r24
 a96:	20 83       	st	Z, r18
		break;
 a98:	00 00       	nop
	default:break;
	}
}
 a9a:	0f 90       	pop	r0
 a9c:	cf 91       	pop	r28
 a9e:	df 91       	pop	r29
 aa0:	08 95       	ret

00000aa2 <Disable_Pcinterrupt>:
/*! \brief This function disables the external pin change interrupt.
 *         
 *  \param PCINT_NO	The pin change interrupt which has to be disabled.
 */
void Disable_Pcinterrupt(uint8_t PCINT_NO)
{
 aa2:	df 93       	push	r29
 aa4:	cf 93       	push	r28
 aa6:	0f 92       	push	r0
 aa8:	cd b7       	in	r28, 0x3d	; 61
 aaa:	de b7       	in	r29, 0x3e	; 62
 aac:	89 83       	std	Y+1, r24	; 0x01
	switch(PCINT_NO){
 aae:	89 81       	ldd	r24, Y+1	; 0x01
 ab0:	88 2f       	mov	r24, r24
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	aa 27       	eor	r26, r26
 ab6:	97 fd       	sbrc	r25, 7
 ab8:	a0 95       	com	r26
 aba:	ba 2f       	mov	r27, r26
 abc:	40 e0       	ldi	r20, 0x00	; 0
 abe:	50 e0       	ldi	r21, 0x00	; 0
 ac0:	27 e1       	ldi	r18, 0x17	; 23
 ac2:	30 e0       	ldi	r19, 0x00	; 0
 ac4:	84 1b       	sub	r24, r20
 ac6:	95 0b       	sbc	r25, r21
 ac8:	28 17       	cp	r18, r24
 aca:	39 07       	cpc	r19, r25
 acc:	08 f4       	brcc	.+2      	; 0xad0 <Disable_Pcinterrupt+0x2e>
 ace:	f9 c0       	rjmp	.+498    	; 0xcc2 <Disable_Pcinterrupt+0x220>
 ad0:	8e 58       	subi	r24, 0x8E	; 142
 ad2:	9f 4f       	sbci	r25, 0xFF	; 255
 ad4:	fc 01       	movw	r30, r24
 ad6:	ee 0f       	add	r30, r30
 ad8:	ff 1f       	adc	r31, r31
 ada:	05 90       	lpm	r0, Z+
 adc:	f4 91       	lpm	r31, Z+
 ade:	e0 2d       	mov	r30, r0
 ae0:	19 94       	eijmp
	case 0:PCMSK0=(PCMSK0&(~(1<<PCINT0)));
 ae2:	8b e6       	ldi	r24, 0x6B	; 107
 ae4:	90 e0       	ldi	r25, 0x00	; 0
 ae6:	2b e6       	ldi	r18, 0x6B	; 107
 ae8:	30 e0       	ldi	r19, 0x00	; 0
 aea:	f9 01       	movw	r30, r18
 aec:	20 81       	ld	r18, Z
 aee:	2e 7f       	andi	r18, 0xFE	; 254
 af0:	fc 01       	movw	r30, r24
 af2:	20 83       	st	Z, r18
		break;
 af4:	e7 c0       	rjmp	.+462    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 1:PCMSK0=(PCMSK0&(~(1<<PCINT1)));
 af6:	8b e6       	ldi	r24, 0x6B	; 107
 af8:	90 e0       	ldi	r25, 0x00	; 0
 afa:	2b e6       	ldi	r18, 0x6B	; 107
 afc:	30 e0       	ldi	r19, 0x00	; 0
 afe:	f9 01       	movw	r30, r18
 b00:	20 81       	ld	r18, Z
 b02:	2d 7f       	andi	r18, 0xFD	; 253
 b04:	fc 01       	movw	r30, r24
 b06:	20 83       	st	Z, r18
		break;
 b08:	dd c0       	rjmp	.+442    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 2:PCMSK0=(PCMSK0&(~(1<<PCINT2)));
 b0a:	8b e6       	ldi	r24, 0x6B	; 107
 b0c:	90 e0       	ldi	r25, 0x00	; 0
 b0e:	2b e6       	ldi	r18, 0x6B	; 107
 b10:	30 e0       	ldi	r19, 0x00	; 0
 b12:	f9 01       	movw	r30, r18
 b14:	20 81       	ld	r18, Z
 b16:	2b 7f       	andi	r18, 0xFB	; 251
 b18:	fc 01       	movw	r30, r24
 b1a:	20 83       	st	Z, r18
		break;
 b1c:	d3 c0       	rjmp	.+422    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 3:PCMSK0=(PCMSK0&(~(1<<PCINT3)));
 b1e:	8b e6       	ldi	r24, 0x6B	; 107
 b20:	90 e0       	ldi	r25, 0x00	; 0
 b22:	2b e6       	ldi	r18, 0x6B	; 107
 b24:	30 e0       	ldi	r19, 0x00	; 0
 b26:	f9 01       	movw	r30, r18
 b28:	20 81       	ld	r18, Z
 b2a:	27 7f       	andi	r18, 0xF7	; 247
 b2c:	fc 01       	movw	r30, r24
 b2e:	20 83       	st	Z, r18
		break;
 b30:	c9 c0       	rjmp	.+402    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 4:PCMSK0=(PCMSK0&(~(1<<PCINT4)));
 b32:	8b e6       	ldi	r24, 0x6B	; 107
 b34:	90 e0       	ldi	r25, 0x00	; 0
 b36:	2b e6       	ldi	r18, 0x6B	; 107
 b38:	30 e0       	ldi	r19, 0x00	; 0
 b3a:	f9 01       	movw	r30, r18
 b3c:	20 81       	ld	r18, Z
 b3e:	2f 7e       	andi	r18, 0xEF	; 239
 b40:	fc 01       	movw	r30, r24
 b42:	20 83       	st	Z, r18
		break;
 b44:	bf c0       	rjmp	.+382    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 5:PCMSK0=(PCMSK0&(~(1<<PCINT5)));
 b46:	8b e6       	ldi	r24, 0x6B	; 107
 b48:	90 e0       	ldi	r25, 0x00	; 0
 b4a:	2b e6       	ldi	r18, 0x6B	; 107
 b4c:	30 e0       	ldi	r19, 0x00	; 0
 b4e:	f9 01       	movw	r30, r18
 b50:	20 81       	ld	r18, Z
 b52:	2f 7d       	andi	r18, 0xDF	; 223
 b54:	fc 01       	movw	r30, r24
 b56:	20 83       	st	Z, r18
		break;
 b58:	b5 c0       	rjmp	.+362    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 6:PCMSK0=(PCMSK0&(~(1<<PCINT6)));
 b5a:	8b e6       	ldi	r24, 0x6B	; 107
 b5c:	90 e0       	ldi	r25, 0x00	; 0
 b5e:	2b e6       	ldi	r18, 0x6B	; 107
 b60:	30 e0       	ldi	r19, 0x00	; 0
 b62:	f9 01       	movw	r30, r18
 b64:	20 81       	ld	r18, Z
 b66:	2f 7b       	andi	r18, 0xBF	; 191
 b68:	fc 01       	movw	r30, r24
 b6a:	20 83       	st	Z, r18
		break;
 b6c:	ab c0       	rjmp	.+342    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 7:PCMSK0=(PCMSK0&(~(1<<PCINT7)));
 b6e:	8b e6       	ldi	r24, 0x6B	; 107
 b70:	90 e0       	ldi	r25, 0x00	; 0
 b72:	2b e6       	ldi	r18, 0x6B	; 107
 b74:	30 e0       	ldi	r19, 0x00	; 0
 b76:	f9 01       	movw	r30, r18
 b78:	20 81       	ld	r18, Z
 b7a:	2f 77       	andi	r18, 0x7F	; 127
 b7c:	fc 01       	movw	r30, r24
 b7e:	20 83       	st	Z, r18
		break;
 b80:	a1 c0       	rjmp	.+322    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 8:PCMSK1=(PCMSK1&(~(1<<PCINT8)));
 b82:	8c e6       	ldi	r24, 0x6C	; 108
 b84:	90 e0       	ldi	r25, 0x00	; 0
 b86:	2c e6       	ldi	r18, 0x6C	; 108
 b88:	30 e0       	ldi	r19, 0x00	; 0
 b8a:	f9 01       	movw	r30, r18
 b8c:	20 81       	ld	r18, Z
 b8e:	2e 7f       	andi	r18, 0xFE	; 254
 b90:	fc 01       	movw	r30, r24
 b92:	20 83       	st	Z, r18
		break;
 b94:	97 c0       	rjmp	.+302    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 9:PCMSK1=(PCMSK1&(~(1<<PCINT9)));
 b96:	8c e6       	ldi	r24, 0x6C	; 108
 b98:	90 e0       	ldi	r25, 0x00	; 0
 b9a:	2c e6       	ldi	r18, 0x6C	; 108
 b9c:	30 e0       	ldi	r19, 0x00	; 0
 b9e:	f9 01       	movw	r30, r18
 ba0:	20 81       	ld	r18, Z
 ba2:	2d 7f       	andi	r18, 0xFD	; 253
 ba4:	fc 01       	movw	r30, r24
 ba6:	20 83       	st	Z, r18
		break;
 ba8:	8d c0       	rjmp	.+282    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 10:PCMSK1=(PCMSK1&(~(1<<PCINT10)));
 baa:	8c e6       	ldi	r24, 0x6C	; 108
 bac:	90 e0       	ldi	r25, 0x00	; 0
 bae:	2c e6       	ldi	r18, 0x6C	; 108
 bb0:	30 e0       	ldi	r19, 0x00	; 0
 bb2:	f9 01       	movw	r30, r18
 bb4:	20 81       	ld	r18, Z
 bb6:	2b 7f       	andi	r18, 0xFB	; 251
 bb8:	fc 01       	movw	r30, r24
 bba:	20 83       	st	Z, r18
		break;
 bbc:	83 c0       	rjmp	.+262    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 11:PCMSK1=(PCMSK1&(~(1<<PCINT11)));
 bbe:	8c e6       	ldi	r24, 0x6C	; 108
 bc0:	90 e0       	ldi	r25, 0x00	; 0
 bc2:	2c e6       	ldi	r18, 0x6C	; 108
 bc4:	30 e0       	ldi	r19, 0x00	; 0
 bc6:	f9 01       	movw	r30, r18
 bc8:	20 81       	ld	r18, Z
 bca:	27 7f       	andi	r18, 0xF7	; 247
 bcc:	fc 01       	movw	r30, r24
 bce:	20 83       	st	Z, r18
		break;
 bd0:	79 c0       	rjmp	.+242    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 12:PCMSK1=(PCMSK1&(~(1<<PCINT12)));
 bd2:	8c e6       	ldi	r24, 0x6C	; 108
 bd4:	90 e0       	ldi	r25, 0x00	; 0
 bd6:	2c e6       	ldi	r18, 0x6C	; 108
 bd8:	30 e0       	ldi	r19, 0x00	; 0
 bda:	f9 01       	movw	r30, r18
 bdc:	20 81       	ld	r18, Z
 bde:	2f 7e       	andi	r18, 0xEF	; 239
 be0:	fc 01       	movw	r30, r24
 be2:	20 83       	st	Z, r18
		break;
 be4:	6f c0       	rjmp	.+222    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 13:PCMSK1=(PCMSK1&(~(1<<PCINT13)));
 be6:	8c e6       	ldi	r24, 0x6C	; 108
 be8:	90 e0       	ldi	r25, 0x00	; 0
 bea:	2c e6       	ldi	r18, 0x6C	; 108
 bec:	30 e0       	ldi	r19, 0x00	; 0
 bee:	f9 01       	movw	r30, r18
 bf0:	20 81       	ld	r18, Z
 bf2:	2f 7d       	andi	r18, 0xDF	; 223
 bf4:	fc 01       	movw	r30, r24
 bf6:	20 83       	st	Z, r18
		break;
 bf8:	65 c0       	rjmp	.+202    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 14:PCMSK1=(PCMSK1&(~(1<<PCINT14)));
 bfa:	8c e6       	ldi	r24, 0x6C	; 108
 bfc:	90 e0       	ldi	r25, 0x00	; 0
 bfe:	2c e6       	ldi	r18, 0x6C	; 108
 c00:	30 e0       	ldi	r19, 0x00	; 0
 c02:	f9 01       	movw	r30, r18
 c04:	20 81       	ld	r18, Z
 c06:	2f 7b       	andi	r18, 0xBF	; 191
 c08:	fc 01       	movw	r30, r24
 c0a:	20 83       	st	Z, r18
		break;
 c0c:	5b c0       	rjmp	.+182    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 15:PCMSK1=(PCMSK1&(~(1<<PCINT15)));
 c0e:	8c e6       	ldi	r24, 0x6C	; 108
 c10:	90 e0       	ldi	r25, 0x00	; 0
 c12:	2c e6       	ldi	r18, 0x6C	; 108
 c14:	30 e0       	ldi	r19, 0x00	; 0
 c16:	f9 01       	movw	r30, r18
 c18:	20 81       	ld	r18, Z
 c1a:	2f 77       	andi	r18, 0x7F	; 127
 c1c:	fc 01       	movw	r30, r24
 c1e:	20 83       	st	Z, r18
		break;
 c20:	51 c0       	rjmp	.+162    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 16:PCMSK2=(PCMSK2&(~(1<<PCINT16)));
 c22:	8d e6       	ldi	r24, 0x6D	; 109
 c24:	90 e0       	ldi	r25, 0x00	; 0
 c26:	2d e6       	ldi	r18, 0x6D	; 109
 c28:	30 e0       	ldi	r19, 0x00	; 0
 c2a:	f9 01       	movw	r30, r18
 c2c:	20 81       	ld	r18, Z
 c2e:	2e 7f       	andi	r18, 0xFE	; 254
 c30:	fc 01       	movw	r30, r24
 c32:	20 83       	st	Z, r18
		break;
 c34:	47 c0       	rjmp	.+142    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 17:PCMSK2=(PCMSK2&(~(1<<PCINT17)));
 c36:	8d e6       	ldi	r24, 0x6D	; 109
 c38:	90 e0       	ldi	r25, 0x00	; 0
 c3a:	2d e6       	ldi	r18, 0x6D	; 109
 c3c:	30 e0       	ldi	r19, 0x00	; 0
 c3e:	f9 01       	movw	r30, r18
 c40:	20 81       	ld	r18, Z
 c42:	2d 7f       	andi	r18, 0xFD	; 253
 c44:	fc 01       	movw	r30, r24
 c46:	20 83       	st	Z, r18
		break;
 c48:	3d c0       	rjmp	.+122    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 18:PCMSK2=(PCMSK2&(~(1<<PCINT18)));
 c4a:	8d e6       	ldi	r24, 0x6D	; 109
 c4c:	90 e0       	ldi	r25, 0x00	; 0
 c4e:	2d e6       	ldi	r18, 0x6D	; 109
 c50:	30 e0       	ldi	r19, 0x00	; 0
 c52:	f9 01       	movw	r30, r18
 c54:	20 81       	ld	r18, Z
 c56:	2b 7f       	andi	r18, 0xFB	; 251
 c58:	fc 01       	movw	r30, r24
 c5a:	20 83       	st	Z, r18
		break;
 c5c:	33 c0       	rjmp	.+102    	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 19:PCMSK2=(PCMSK2&(~(1<<PCINT19)));
 c5e:	8d e6       	ldi	r24, 0x6D	; 109
 c60:	90 e0       	ldi	r25, 0x00	; 0
 c62:	2d e6       	ldi	r18, 0x6D	; 109
 c64:	30 e0       	ldi	r19, 0x00	; 0
 c66:	f9 01       	movw	r30, r18
 c68:	20 81       	ld	r18, Z
 c6a:	27 7f       	andi	r18, 0xF7	; 247
 c6c:	fc 01       	movw	r30, r24
 c6e:	20 83       	st	Z, r18
		break;
 c70:	29 c0       	rjmp	.+82     	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 20:PCMSK2=(PCMSK2&(~(1<<PCINT20)));
 c72:	8d e6       	ldi	r24, 0x6D	; 109
 c74:	90 e0       	ldi	r25, 0x00	; 0
 c76:	2d e6       	ldi	r18, 0x6D	; 109
 c78:	30 e0       	ldi	r19, 0x00	; 0
 c7a:	f9 01       	movw	r30, r18
 c7c:	20 81       	ld	r18, Z
 c7e:	2f 7e       	andi	r18, 0xEF	; 239
 c80:	fc 01       	movw	r30, r24
 c82:	20 83       	st	Z, r18
		break;
 c84:	1f c0       	rjmp	.+62     	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 21:PCMSK2=(PCMSK2&(~(1<<PCINT21)));
 c86:	8d e6       	ldi	r24, 0x6D	; 109
 c88:	90 e0       	ldi	r25, 0x00	; 0
 c8a:	2d e6       	ldi	r18, 0x6D	; 109
 c8c:	30 e0       	ldi	r19, 0x00	; 0
 c8e:	f9 01       	movw	r30, r18
 c90:	20 81       	ld	r18, Z
 c92:	2f 7d       	andi	r18, 0xDF	; 223
 c94:	fc 01       	movw	r30, r24
 c96:	20 83       	st	Z, r18
		break;
 c98:	15 c0       	rjmp	.+42     	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 22:PCMSK2=(PCMSK2&(~(1<<PCINT22)));
 c9a:	8d e6       	ldi	r24, 0x6D	; 109
 c9c:	90 e0       	ldi	r25, 0x00	; 0
 c9e:	2d e6       	ldi	r18, 0x6D	; 109
 ca0:	30 e0       	ldi	r19, 0x00	; 0
 ca2:	f9 01       	movw	r30, r18
 ca4:	20 81       	ld	r18, Z
 ca6:	2f 7b       	andi	r18, 0xBF	; 191
 ca8:	fc 01       	movw	r30, r24
 caa:	20 83       	st	Z, r18
		break;
 cac:	0b c0       	rjmp	.+22     	; 0xcc4 <Disable_Pcinterrupt+0x222>
	case 23:PCMSK2=(PCMSK2&(~(1<<PCINT23)));
 cae:	8d e6       	ldi	r24, 0x6D	; 109
 cb0:	90 e0       	ldi	r25, 0x00	; 0
 cb2:	2d e6       	ldi	r18, 0x6D	; 109
 cb4:	30 e0       	ldi	r19, 0x00	; 0
 cb6:	f9 01       	movw	r30, r18
 cb8:	20 81       	ld	r18, Z
 cba:	2f 77       	andi	r18, 0x7F	; 127
 cbc:	fc 01       	movw	r30, r24
 cbe:	20 83       	st	Z, r18
		break;
 cc0:	01 c0       	rjmp	.+2      	; 0xcc4 <Disable_Pcinterrupt+0x222>
	default:break;
 cc2:	00 00       	nop
	}
	if(PCMSK0 == 0x00)
 cc4:	8b e6       	ldi	r24, 0x6B	; 107
 cc6:	90 e0       	ldi	r25, 0x00	; 0
 cc8:	fc 01       	movw	r30, r24
 cca:	80 81       	ld	r24, Z
 ccc:	88 23       	and	r24, r24
 cce:	51 f4       	brne	.+20     	; 0xce4 <Disable_Pcinterrupt+0x242>
	{
		PCICR=(PCICR&(~(1<<PCIE0)));
 cd0:	88 e6       	ldi	r24, 0x68	; 104
 cd2:	90 e0       	ldi	r25, 0x00	; 0
 cd4:	28 e6       	ldi	r18, 0x68	; 104
 cd6:	30 e0       	ldi	r19, 0x00	; 0
 cd8:	f9 01       	movw	r30, r18
 cda:	20 81       	ld	r18, Z
 cdc:	2e 7f       	andi	r18, 0xFE	; 254
 cde:	fc 01       	movw	r30, r24
 ce0:	20 83       	st	Z, r18
 ce2:	1f c0       	rjmp	.+62     	; 0xd22 <Disable_Pcinterrupt+0x280>
	}
	else if(PCMSK1 == 0x00)
 ce4:	8c e6       	ldi	r24, 0x6C	; 108
 ce6:	90 e0       	ldi	r25, 0x00	; 0
 ce8:	fc 01       	movw	r30, r24
 cea:	80 81       	ld	r24, Z
 cec:	88 23       	and	r24, r24
 cee:	51 f4       	brne	.+20     	; 0xd04 <Disable_Pcinterrupt+0x262>
	{
		PCICR=(PCICR&(~(1<<PCIE1)));
 cf0:	88 e6       	ldi	r24, 0x68	; 104
 cf2:	90 e0       	ldi	r25, 0x00	; 0
 cf4:	28 e6       	ldi	r18, 0x68	; 104
 cf6:	30 e0       	ldi	r19, 0x00	; 0
 cf8:	f9 01       	movw	r30, r18
 cfa:	20 81       	ld	r18, Z
 cfc:	2d 7f       	andi	r18, 0xFD	; 253
 cfe:	fc 01       	movw	r30, r24
 d00:	20 83       	st	Z, r18
 d02:	0f c0       	rjmp	.+30     	; 0xd22 <Disable_Pcinterrupt+0x280>
	}
	else if(PCMSK2 == 0x00)
 d04:	8d e6       	ldi	r24, 0x6D	; 109
 d06:	90 e0       	ldi	r25, 0x00	; 0
 d08:	fc 01       	movw	r30, r24
 d0a:	80 81       	ld	r24, Z
 d0c:	88 23       	and	r24, r24
 d0e:	49 f4       	brne	.+18     	; 0xd22 <Disable_Pcinterrupt+0x280>
	{
		PCICR=(PCICR&(~(1<<PCIE2)));
 d10:	88 e6       	ldi	r24, 0x68	; 104
 d12:	90 e0       	ldi	r25, 0x00	; 0
 d14:	28 e6       	ldi	r18, 0x68	; 104
 d16:	30 e0       	ldi	r19, 0x00	; 0
 d18:	f9 01       	movw	r30, r18
 d1a:	20 81       	ld	r18, Z
 d1c:	2b 7f       	andi	r18, 0xFB	; 251
 d1e:	fc 01       	movw	r30, r24
 d20:	20 83       	st	Z, r18
	}
}
 d22:	0f 90       	pop	r0
 d24:	cf 91       	pop	r28
 d26:	df 91       	pop	r29
 d28:	08 95       	ret

00000d2a <__vector_1>:
#include "ext_interrupt_driver.h"
#include "ext_interrupt_driver.c"

//Interrupt handler for External interrupt INT0
ISR(INT0_vect)
{
 d2a:	1f 92       	push	r1
 d2c:	0f 92       	push	r0
 d2e:	0f b6       	in	r0, 0x3f	; 63
 d30:	0f 92       	push	r0
 d32:	00 90 5b 00 	lds	r0, 0x005B
 d36:	0f 92       	push	r0
 d38:	11 24       	eor	r1, r1
 d3a:	2f 93       	push	r18
 d3c:	8f 93       	push	r24
 d3e:	9f 93       	push	r25
 d40:	ef 93       	push	r30
 d42:	ff 93       	push	r31
 d44:	df 93       	push	r29
 d46:	cf 93       	push	r28
 d48:	0f 92       	push	r0
 d4a:	0f 92       	push	r0
 d4c:	cd b7       	in	r28, 0x3d	; 61
 d4e:	de b7       	in	r29, 0x3e	; 62
	//Turn on LED0
	PORTA = 0xFE;
 d50:	82 e2       	ldi	r24, 0x22	; 34
 d52:	90 e0       	ldi	r25, 0x00	; 0
 d54:	2e ef       	ldi	r18, 0xFE	; 254
 d56:	fc 01       	movw	r30, r24
 d58:	20 83       	st	Z, r18
	//wait for some delay	
	for(int i=0;i<5000;i++);	
 d5a:	1a 82       	std	Y+2, r1	; 0x02
 d5c:	19 82       	std	Y+1, r1	; 0x01
 d5e:	05 c0       	rjmp	.+10     	; 0xd6a <__vector_1+0x40>
 d60:	89 81       	ldd	r24, Y+1	; 0x01
 d62:	9a 81       	ldd	r25, Y+2	; 0x02
 d64:	01 96       	adiw	r24, 0x01	; 1
 d66:	9a 83       	std	Y+2, r25	; 0x02
 d68:	89 83       	std	Y+1, r24	; 0x01
 d6a:	89 81       	ldd	r24, Y+1	; 0x01
 d6c:	9a 81       	ldd	r25, Y+2	; 0x02
 d6e:	f3 e1       	ldi	r31, 0x13	; 19
 d70:	88 38       	cpi	r24, 0x88	; 136
 d72:	9f 07       	cpc	r25, r31
 d74:	ac f3       	brlt	.-22     	; 0xd60 <__vector_1+0x36>
	//Turn off LED0
	PORTA = 0xFF;	
 d76:	82 e2       	ldi	r24, 0x22	; 34
 d78:	90 e0       	ldi	r25, 0x00	; 0
 d7a:	2f ef       	ldi	r18, 0xFF	; 255
 d7c:	fc 01       	movw	r30, r24
 d7e:	20 83       	st	Z, r18
}
 d80:	0f 90       	pop	r0
 d82:	0f 90       	pop	r0
 d84:	cf 91       	pop	r28
 d86:	df 91       	pop	r29
 d88:	ff 91       	pop	r31
 d8a:	ef 91       	pop	r30
 d8c:	9f 91       	pop	r25
 d8e:	8f 91       	pop	r24
 d90:	2f 91       	pop	r18
 d92:	0f 90       	pop	r0
 d94:	00 92 5b 00 	sts	0x005B, r0
 d98:	0f 90       	pop	r0
 d9a:	0f be       	out	0x3f, r0	; 63
 d9c:	0f 90       	pop	r0
 d9e:	1f 90       	pop	r1
 da0:	18 95       	reti

00000da2 <__vector_9>:

//Interrupt handler for Pin change interrupt PCINT0
ISR(PCINT0_vect)
{
 da2:	1f 92       	push	r1
 da4:	0f 92       	push	r0
 da6:	0f b6       	in	r0, 0x3f	; 63
 da8:	0f 92       	push	r0
 daa:	00 90 5b 00 	lds	r0, 0x005B
 dae:	0f 92       	push	r0
 db0:	11 24       	eor	r1, r1
 db2:	2f 93       	push	r18
 db4:	8f 93       	push	r24
 db6:	9f 93       	push	r25
 db8:	ef 93       	push	r30
 dba:	ff 93       	push	r31
 dbc:	df 93       	push	r29
 dbe:	cf 93       	push	r28
 dc0:	0f 92       	push	r0
 dc2:	0f 92       	push	r0
 dc4:	cd b7       	in	r28, 0x3d	; 61
 dc6:	de b7       	in	r29, 0x3e	; 62
	//Turn on LED1
	PORTA = 0xFD;
 dc8:	82 e2       	ldi	r24, 0x22	; 34
 dca:	90 e0       	ldi	r25, 0x00	; 0
 dcc:	2d ef       	ldi	r18, 0xFD	; 253
 dce:	fc 01       	movw	r30, r24
 dd0:	20 83       	st	Z, r18
	//wait for some delay	
	for(int i=0;i<5000;i++);
 dd2:	1a 82       	std	Y+2, r1	; 0x02
 dd4:	19 82       	std	Y+1, r1	; 0x01
 dd6:	05 c0       	rjmp	.+10     	; 0xde2 <__vector_9+0x40>
 dd8:	89 81       	ldd	r24, Y+1	; 0x01
 dda:	9a 81       	ldd	r25, Y+2	; 0x02
 ddc:	01 96       	adiw	r24, 0x01	; 1
 dde:	9a 83       	std	Y+2, r25	; 0x02
 de0:	89 83       	std	Y+1, r24	; 0x01
 de2:	89 81       	ldd	r24, Y+1	; 0x01
 de4:	9a 81       	ldd	r25, Y+2	; 0x02
 de6:	f3 e1       	ldi	r31, 0x13	; 19
 de8:	88 38       	cpi	r24, 0x88	; 136
 dea:	9f 07       	cpc	r25, r31
 dec:	ac f3       	brlt	.-22     	; 0xdd8 <__vector_9+0x36>
	//Turn off LED1	
	PORTA = 0xFF;	
 dee:	82 e2       	ldi	r24, 0x22	; 34
 df0:	90 e0       	ldi	r25, 0x00	; 0
 df2:	2f ef       	ldi	r18, 0xFF	; 255
 df4:	fc 01       	movw	r30, r24
 df6:	20 83       	st	Z, r18
}
 df8:	0f 90       	pop	r0
 dfa:	0f 90       	pop	r0
 dfc:	cf 91       	pop	r28
 dfe:	df 91       	pop	r29
 e00:	ff 91       	pop	r31
 e02:	ef 91       	pop	r30
 e04:	9f 91       	pop	r25
 e06:	8f 91       	pop	r24
 e08:	2f 91       	pop	r18
 e0a:	0f 90       	pop	r0
 e0c:	00 92 5b 00 	sts	0x005B, r0
 e10:	0f 90       	pop	r0
 e12:	0f be       	out	0x3f, r0	; 63
 e14:	0f 90       	pop	r0
 e16:	1f 90       	pop	r1
 e18:	18 95       	reti

00000e1a <main>:

int main(void)
{
 e1a:	df 93       	push	r29
 e1c:	cf 93       	push	r28
 e1e:	cd b7       	in	r28, 0x3d	; 61
 e20:	de b7       	in	r29, 0x3e	; 62
	//Configure PORTA as output to drive LEDs
	DDRA = 0xFF;	
 e22:	81 e2       	ldi	r24, 0x21	; 33
 e24:	90 e0       	ldi	r25, 0x00	; 0
 e26:	2f ef       	ldi	r18, 0xFF	; 255
 e28:	fc 01       	movw	r30, r24
 e2a:	20 83       	st	Z, r18
	//Turn off all LEDs
	PORTA = 0xFF;	
 e2c:	82 e2       	ldi	r24, 0x22	; 34
 e2e:	90 e0       	ldi	r25, 0x00	; 0
 e30:	2f ef       	ldi	r18, 0xFF	; 255
 e32:	fc 01       	movw	r30, r24
 e34:	20 83       	st	Z, r18
	//Enabling pull up in PORTB
	PORTB = 0xFF;	
 e36:	85 e2       	ldi	r24, 0x25	; 37
 e38:	90 e0       	ldi	r25, 0x00	; 0
 e3a:	2f ef       	ldi	r18, 0xFF	; 255
 e3c:	fc 01       	movw	r30, r24
 e3e:	20 83       	st	Z, r18
	//Enabling pull up in PORTD
	PORTD = 0xFF;	
 e40:	8b e2       	ldi	r24, 0x2B	; 43
 e42:	90 e0       	ldi	r25, 0x00	; 0
 e44:	2f ef       	ldi	r18, 0xFF	; 255
 e46:	fc 01       	movw	r30, r24
 e48:	20 83       	st	Z, r18
	
	//Configure INT0 to sense rising edge
	Configure_Interrupt(INTR0,RISING);	
 e4a:	80 e0       	ldi	r24, 0x00	; 0
 e4c:	63 e0       	ldi	r22, 0x03	; 3
 e4e:	0e 94 a3 00 	call	0x146	; 0x146 <Configure_Interrupt>
	//Enable INT0 interrupt	
	Enable_Interrupt(INTR0);
 e52:	80 e0       	ldi	r24, 0x00	; 0
 e54:	0e 94 cd 02 	call	0x59a	; 0x59a <Enable_Interrupt>
	//Enable pin change interrupt PCINT0 on PORTB0		
	Enable_Pcinterrupt(PCINTR0);		
 e58:	80 e0       	ldi	r24, 0x00	; 0
 e5a:	0e 94 49 03 	call	0x692	; 0x692 <Enable_Pcinterrupt>

	//Enable global interrupt enable bit
	sei();	
 e5e:	78 94       	sei
	
    while(1)
    {
        //Empty loop - Wait forever until interrupt occurs 
    }
 e60:	ff cf       	rjmp	.-2      	; 0xe60 <main+0x46>

00000e62 <_exit>:
 e62:	ff cf       	rjmp	.-2      	; 0xe62 <_exit>
